{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment Proyecto Final \'96 Medici\'F3n de Inclinaci\'F3n  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.0.1 \par
}}Proyecto Final \'96 Medici\'F3n de Inclinaci\'F3n}
{\comment Generado por doxygen 1.14.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Proyecto Final \'96 Medici\'F3n de Inclinaci\'F3n}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Versi\'F3n 0.0.1\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Tabla de contenidos\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Index\par \pard\plain 
{\tc \v Topic Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Topics\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all topics with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
DS3231_PORT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
.h Definiciones de registros\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MPU6050_PORT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
I2C Master (HAL)\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CMSIS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Stm32f4xx_system\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
STM32F4xx_System_Private_Includes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_TypesDefinitions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Defines\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Macros\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Variables\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_FunctionPrototypes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F4xx_System_Private_Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice de estructuras de datos\par \pard\plain 
{\tc \v \'CDndice de estructuras de datos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Estructuras de datos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de estructuras con breves descripciones:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Boot_Status} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura utilizada en el proceso de inicializaci\'F3n de dispositivos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b COMMAND_DATA} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DS3231_Time} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de tiempo })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FPTRS_T} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MPU6050_Data} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MPU6050_DataRaw} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MPU6050_Handler} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SM_Handler} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de control que contiene todas las variables de la SM principal })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice de archivos\par \pard\plain 
{\tc \v \'CDndice de archivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de archivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos los archivos documentados y con breves descripciones:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/{\b ds3231.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del RTC DS3231 utilizando dev_i2cm })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/{\b ds3231_port.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del RTC DS3231 utilizando dev_i2cm })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/{\b ds3231_registers.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Definiciones de registros y mascaras para el RTC DS3231 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/{\b ds3231.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver DS3231, utilizando {\b ds3231_port.c} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/{\b ds3231_port.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver DS3231 usando dev_i2cm (HAL I\'B2C) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/{\b dev_LCD.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver para LCD 16x2 (HD44780) v\'EDa I\'B2C con backpack PCF8574 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/{\b LCD_port.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primitivas de bajo nivel para LCD HD44780 v\'EDa PCF8574 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/{\b LCD_registers.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/{\b dev_LCD.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Librer\'EDa de control para LCD 16x2 v\'EDa I\'B2C (PCF8574) con RTOS })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/{\b LCD_port.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n de primitivas de bajo nivel para LCD HD44780 v\'EDa PCF8574 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu6050.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del MPU6050 utilizando dev_i2cm })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu6050_port.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del MPU6050 utilizando dev_i2cm })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu6050_registers.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Definiciones de registros y mascaras para el MPU6050 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu_math.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/{\b mpu6050.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver del MPU-6050 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/{\b mpu6050_port.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver MPU6050 usando dev_i2cm (HAL I\'B2C) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b api.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for {\b main.c} file. This file contains the common defines of the application })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b FreeRTOSConfig.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b main.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for {\b main.c} file. This file contains the common defines of the application })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b stm32f4xx_hal_conf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b stm32f4xx_it.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the headers of the interrupt handlers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/{\b dev_i2cm_api.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/{\b dev_i2cs_api.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/{\b dev_modules.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/{\b sys_dbg_api.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/{\b sys_modules.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/{\b sys_sm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/{\b dev_gpio.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/{\b dev_gpio_cfg.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains all the function prototypes for the gpio.c file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/{\b dev_i2cm.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capa de I2C Master (HAL) para STM32 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/{\b dev_uart.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains all the function prototypes for the usart.c file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/{\b dev_usart.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/{\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Main program body })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/{\b stm32f4xx_hal_msp.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/{\b stm32f4xx_hal_timebase_tim.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/{\b stm32f4xx_it.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Service Routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/{\b dev_i2cm.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the I2C master })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/{\b dev_i2cs.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the I2C instances })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/{\b dev_uart.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the UART })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/{\b sys_sm.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E1quina de estados principal del sistema })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/{\b syscalls.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE Minimal System calls file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/{\b sysmem.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE System Memory calls file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/{\b system_stm32f4xx.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M4 Device Peripheral Access Layer System Source File })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Documentation{\tc \v Topic Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DS3231_PORT }\par \pard\plain 
{\tc\tcl2 \v DS3231_PORT}
{\xe \v DS3231_PORT}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_ADDRESS}\~ (0x68)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_RETRY_COUNT}\~ (3){\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_is_ready} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del RTC DS3231 en el bus I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_write} (uint8_t reg, uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_block_write} (uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_read} (uint8_t reg, uint8_t *data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_block_read} (uint8_t reg, uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v DS3231_ADDRESS\:DS3231_PORT}
{\xe \v DS3231_PORT\:DS3231_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_ADDRESS\~ (0x68)}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Direcci\'F3n 7-bit del DS3231 (0x68) Cantidad de reintentos en I2CM_IsDeviceReady \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v DS3231_is_ready\:DS3231_PORT}
{\xe \v DS3231_PORT\:DS3231_is_ready}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef DS3231_is_ready (void )}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del RTC DS3231 en el bus I2C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna HAL_OK si responde al address 0x68. \par
}}}}
{\xe \v DS3231_register_block_read\:DS3231_PORT}
{\xe \v DS3231_PORT\:DS3231_register_block_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef DS3231_register_block_read (uint8_t reg, uint8_t * data, uint16_t len)}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n del registro donde se comienza a leer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero de salida. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i len} \cell }{Cantidad de registros a leer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
{\xe \v DS3231_register_block_write\:DS3231_PORT}
{\xe \v DS3231_PORT\:DS3231_register_block_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef DS3231_register_block_write (uint8_t * data, uint16_t len)}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del DS3231. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero al bloque de datos a escribir. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i len} \cell }{Longitud del bloque de datos. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
{\xe \v DS3231_register_read\:DS3231_PORT}
{\xe \v DS3231_PORT\:DS3231_register_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef DS3231_register_read (uint8_t reg, uint8_t * data)}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n del registro. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero de salida (1 byte). \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
{\xe \v DS3231_register_write\:DS3231_PORT}
{\xe \v DS3231_PORT\:DS3231_register_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef DS3231_register_write (uint8_t reg, uint8_t data)}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del DS3231. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n del registro. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Dato a escribir. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.h Definiciones de registros }\par \pard\plain 
{\tc\tcl2 \v .h Definiciones de registros}
{\xe \v .h Definiciones de registros}
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_MAX_BLOCK_WRITE}\~ (8){\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_MAX_BLOCK_READ}\~ (7){\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_SECONDS}\~ (0x00)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_MINUTES}\~ (0x01){\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_HOURS}\~ (0x02){\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_DAY}\~ (0x03)  /* 1..7 */{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_DATE}\~ (0x04)  /* 1..31 */{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_MONTH}\~ (0x05)  /* bit7 = Centenas */{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_YEAR}\~ (0x06)  /* (00..99) */{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v DS3231_REG_SECONDS\:.h Definiciones de registros}
{\xe \v .h Definiciones de registros\:DS3231_REG_SECONDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_SECONDS\~ (0x00)}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nota: Los registros de hora y fecha est\'E1n en formato BCD \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MPU6050_PORT }\par \pard\plain 
{\tc\tcl2 \v MPU6050_PORT}
{\xe \v MPU6050_PORT}
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MPU6050_ADDRESS}\~ (0x69)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_RETRY_COUNT}\~ (3){\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_is_ready} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del MPU6050 en el bus I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_write} (uint8_t reg, uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_block_write} (uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_read} (uint8_t reg, uint8_t *data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_block_read} (uint8_t reg, uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v MPU6050_ADDRESS\:MPU6050_PORT}
{\xe \v MPU6050_PORT\:MPU6050_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MPU6050_ADDRESS\~ (0x69)}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Direcci\'F3n I2C del MPU6050 (0x69) Cantidad de reintentos en I2CM_IsDeviceReady \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v MPU6050_is_ready\:MPU6050_PORT}
{\xe \v MPU6050_PORT\:MPU6050_is_ready}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef MPU6050_is_ready (void )}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del MPU6050 en el bus I2C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna HAL_OK si responde al address 0x69. \par
}}}}
{\xe \v MPU6050_register_block_read\:MPU6050_PORT}
{\xe \v MPU6050_PORT\:MPU6050_register_block_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef MPU6050_register_block_read (uint8_t reg, uint8_t * data, uint16_t len)}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n del registro donde se comienza a leer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero de salida. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i len} \cell }{Cantidad de registros a leer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
{\xe \v MPU6050_register_block_write\:MPU6050_PORT}
{\xe \v MPU6050_PORT\:MPU6050_register_block_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef MPU6050_register_block_write (uint8_t * data, uint16_t len)}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del MPU6050. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero al bloque de datos a escribir. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i len} \cell }{Longitud del bloque de datos. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
{\xe \v MPU6050_register_read\:MPU6050_PORT}
{\xe \v MPU6050_PORT\:MPU6050_register_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef MPU6050_register_read (uint8_t reg, uint8_t * data)}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n del registro. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero de salida (1 byte). \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
{\xe \v MPU6050_register_write\:MPU6050_PORT}
{\xe \v MPU6050_PORT\:MPU6050_register_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef MPU6050_register_write (uint8_t reg, uint8_t data)}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del MPU6050. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n del registro. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Dato a escribir. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si funciono correctamente. \par
}}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C Master (HAL) }\par \pard\plain 
{\tc\tcl2 \v I2C Master (HAL)}
{\xe \v I2C Master (HAL)}
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funciones de inicializaci\'F3n del I\'B2C. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_TIMEOUT}\~ (5000)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_InitStart} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa I2C1 a 400 kHz, 7-bit, sin dual address. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_DeInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa I2C1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Write} (uint8_t address, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un buffer en un esclavo I\'B2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Read} (uint8_t address, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un buffer crudo desde un esclavo I\'B2C (no lee direcci\'F3n interna). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Read_Sr} (uint8_t address, uint8_t reg, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee bytes desde un registro interno. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_IsDeviceReady} (uint8_t address, uint32_t trials)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica si un esclavo responde (ACK) en la direcci\'F3n dada. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funciones de inicializaci\'F3n del I\'B2C. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v I2C_TIMEOUT\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2C_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_TIMEOUT\~ (5000)}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeout de I2C en milisegundos \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v I2CM_DeInit\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2CM_DeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CM_DeInit (void )}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa I2C1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si se desinicializ\'F3 correctamente.\par
}}Desinicializa I2C1.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef\par
}}RTOS Info: Any \par
}}
{\xe \v I2CM_InitStart\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2CM_InitStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CM_InitStart (void )}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa I2C1 a 400 kHz, 7-bit, sin dual address. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si se configur\'F3 correctamente.\par
}}Inicializa I2C1 a 400 kHz, 7-bit, sin dual address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef\par
}}RTOS Info: Any \par
}}
{\xe \v I2CM_IsDeviceReady\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2CM_IsDeviceReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CM_IsDeviceReady (uint8_t address, uint32_t trials)}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica si un esclavo responde (ACK) en la direcci\'F3n dada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{Direcci\'F3n 7-bit. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i trials} \cell }{Numero de reintentos. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si respondi\'F3 el esclavo a la direccion dada.\par
}}Verifica si un esclavo responde (ACK) en la direcci\'F3n dada.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{(uint8_t) Direcci\'F3n 7-bit. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i trials} \cell }{(uint32_t) N\'FAmero de reintentos.\cell }
{\row }
}
RTOS Info: Any \par
}}
{\xe \v I2CM_Read\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2CM_Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CM_Read (uint8_t address, uint8_t * data, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un buffer crudo desde un esclavo I\'B2C (no lee direcci\'F3n interna). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{Direcci\'F3n 7-bit (p.ej. 0x68). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero a buffer de recepci\'F3n. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Cantidad de bytes a recibir. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si finaliz\'F3 correctamente.\par
}}Lee un buffer crudo desde un esclavo I\'B2C (no lee direcci\'F3n interna).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{(uint8_t) Direcci\'F3n 7-bit del esclavo (p.ej. 0x68). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i data} \cell }{(uint8_t[512]) Puntero al buffer de recepci\'F3n. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i size} \cell }{(uint16_t) Cantidad de bytes a recibir.\cell }
{\row }
}
RTOS Info: Any \par
}}
{\xe \v I2CM_Read_Sr\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2CM_Read_Sr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CM_Read_Sr (uint8_t address, uint8_t reg, uint8_t * data, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee bytes desde un registro interno. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{Direcci\'F3n 7-bit (p.ej. 0x68). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Direcci\'F3n interna (8-bit) de inicio. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Buffer de salida. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{N\'FAmero de bytes a leer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si finaliz\'F3 correctamente.\par
}}Lee bytes desde un registro interno (sub-address read).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{(uint8_t) Direcci\'F3n 7-bit del esclavo (p.ej. 0x68). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i reg} \cell }{(uint8_t) Direcci\'F3n interna (8-bit) de inicio. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i data} \cell }{(uint8_t[512]) Buffer de salida. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i size} \cell }{(uint16_t) N\'FAmero de bytes a leer.\cell }
{\row }
}
RTOS Info: Any \par
}}
{\xe \v I2CM_Write\:I2C Master (HAL)}
{\xe \v I2C Master (HAL)\:I2CM_Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CM_Write (uint8_t address, uint8_t * data, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un buffer en un esclavo I\'B2C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{Direcci\'F3n 7-bit (p.ej. 0x68). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Puntero a buffer a transmitir. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Cantidad de bytes a transmitir. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_OK si finaliz\'F3 correctamente.\par
}}Escribe un buffer en un esclavo I\'B2C.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{(uint8_t) Direcci\'F3n 7-bit del esclavo (p.ej. 0x68). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i data} \cell }{(uint8_t[512]) Puntero al buffer a transmitir. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i size} \cell }{(uint16_t) Cantidad de bytes a transmitir.\cell }
{\row }
}
RTOS Info: Any \par
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS }\par \pard\plain 
{\tc\tcl2 \v CMSIS}
{\xe \v CMSIS}
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Topics\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Stm32f4xx_system}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stm32f4xx_system }\par \pard\plain 
{\tc\tcl3 \v Stm32f4xx_system}
{\xe \v Stm32f4xx_system}
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Topics\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Includes}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_TypesDefinitions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Defines}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Macros}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Variables}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_FunctionPrototypes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F4xx_System_Private_Functions}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_Includes }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Includes}
{\xe \v STM32F4xx_System_Private_Includes}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSE_VALUE}\~ ((uint32_t)25000000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSI_VALUE}\~ ((uint32_t)16000000)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v HSE_VALUE\:STM32F4xx_System_Private_Includes}
{\xe \v STM32F4xx_System_Private_Includes\:HSE_VALUE}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid {
{\b 
#define HSE_VALUE\~ ((uint32_t)25000000)}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value of the External oscillator in Hz \par
}}
{\xe \v HSI_VALUE\:STM32F4xx_System_Private_Includes}
{\xe \v STM32F4xx_System_Private_Includes\:HSI_VALUE}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid {
{\b 
#define HSI_VALUE\~ ((uint32_t)16000000)}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value of the Internal oscillator in Hz \par
}}
\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_TypesDefinitions }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_TypesDefinitions}
{\xe \v STM32F4xx_System_Private_TypesDefinitions}
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_Defines }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Defines}
{\xe \v STM32F4xx_System_Private_Defines}
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_Macros }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Macros}
{\xe \v STM32F4xx_System_Private_Macros}
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_Variables }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Variables}
{\xe \v STM32F4xx_System_Private_Variables}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b SystemCoreClock} = 16000000{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b AHBPrescTable} [16] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b APBPrescTable} [8] = \{0, 0, 0, 0, 1, 2, 3, 4\}{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_FunctionPrototypes }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_FunctionPrototypes}
{\xe \v STM32F4xx_System_Private_FunctionPrototypes}
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32F4xx_System_Private_Functions }\par \pard\plain 
{\tc\tcl4 \v STM32F4xx_System_Private_Functions}
{\xe \v STM32F4xx_System_Private_Functions}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the FPU setting, vector table location and External memory configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemCoreClockUpdate} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v SystemCoreClockUpdate\:STM32F4xx_System_Private_Functions}
{\xe \v STM32F4xx_System_Private_Functions\:SystemCoreClockUpdate}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid {
{\b 
void SystemCoreClockUpdate (void )}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Each time the core clock (HCLK) changes, this function must be called to update SystemCoreClock variable value. Otherwise, any configuration based on this variable will be incorrect. \par
- The system frequency computed by this function is not the real frequency in the chip. It is calculated based on the predefined constant and the selected clock source:\par
}}{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
If SYSCLK source is HSI, SystemCoreClock will contain the {\b HSI_VALUE(*)}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
If SYSCLK source is HSE, SystemCoreClock will contain the {\b HSE_VALUE(**)}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
If SYSCLK source is PLL, SystemCoreClock will contain the {\b HSE_VALUE(**)} or {\b HSI_VALUE(*)} multiplied/divided by the PLL factors.\par}
(*) HSI_VALUE is a constant defined in {\b stm32f4xx_hal_conf.h} file (default value 16 MHz) but the real value may vary depending on the variations in voltage and temperature. \par
(**) HSE_VALUE is a constant defined in {\b stm32f4xx_hal_conf.h} file (its value depends on the application requirements), user has to ensure that HSE_VALUE is same as the real frequency of the crystal used. Otherwise, this function may have wrong result.\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The result of this function could be not correct when using fractional value for HSE crystal.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
{\xe \v SystemInit\:STM32F4xx_System_Private_Functions}
{\xe \v STM32F4xx_System_Private_Functions\:SystemInit}
\pard\plain \s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid {
{\b 
void SystemInit (void )}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the FPU setting, vector table location and External memory configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de estructuras de datos{\tc \v Documentaci\'F3n de estructuras de datos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura Boot_Status\par \pard\plain 
{\tc\tcl2 \v Boot_Status}
{\xe \v Boot_Status}
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura utilizada en el proceso de inicializaci\'F3n de dispositivos. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Device_Init_Stage} {\b init_stage}{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b attempt_count}{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b lcd_ready}{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b rtc_ready}{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b mpu_ready}{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura utilizada en el proceso de inicializaci\'F3n de dispositivos. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite reintentar los perif\'E9ricos que fallaron, evitando reinicios innecesarios de los dispositivos ya inicializados. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/{\b sys_sm.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura COMMAND_DATA\par \pard\plain 
{\tc\tcl2 \v COMMAND_DATA}
{\xe \v COMMAND_DATA}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint8_t {\b buffer} [COMMAND_SIZE]{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b api.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura DS3231_Time\par \pard\plain 
{\tc\tcl2 \v DS3231_Time}
{\xe \v DS3231_Time}
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de tiempo. }}\par
{
{\f2 #include <ds3231.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b seconds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b minutes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hours}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b day}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b date}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b month}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b year}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de tiempo. \par
}{{{\b Ejemplos}}\par
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de campos\par
\pard\plain 
{\xe \v date\:DS3231_Time}
{\xe \v DS3231_Time\:date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t date}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x04: d\'EDa del mes \par
}}
{\xe \v day\:DS3231_Time}
{\xe \v DS3231_Time\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t day}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x03: d\'EDa de semana \par
}}
{\xe \v hours\:DS3231_Time}
{\xe \v DS3231_Time\:hours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t hours}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x02: horas \par
}{{{\b Ejemplos}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
{\xe \v minutes\:DS3231_Time}
{\xe \v DS3231_Time\:minutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t minutes}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x01: minutos \par
}{{{\b Ejemplos}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
{\xe \v month\:DS3231_Time}
{\xe \v DS3231_Time\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t month}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x05: mes, bit7=Century \par
}}
{\xe \v seconds\:DS3231_Time}
{\xe \v DS3231_Time\:seconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t seconds}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x00: segundos \par
}{{{\b Ejemplos}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
{\xe \v year\:DS3231_Time}
{\xe \v DS3231_Time\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t year}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0x06: a\'F1o (00..99) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/{\b ds3231.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura FPTRS_T\par \pard\plain 
{\tc\tcl2 \v FPTRS_T}
{\xe \v FPTRS_T}
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b module_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b function_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b task_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b nargs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b arg_types} [MAX_ARGS]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b arg_lens} [MAX_ARGS]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ fptr_0 {\b f0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ fptr_1 {\b f1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ fptr_2 {\b f2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ fptr_3 {\b f3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ fptr_4 {\b f4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ fptr_5 {\b f5}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b fptr}{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de campos\par
\pard\plain 
{\xe \v arg_lens\:FPTRS_T}
{\xe \v FPTRS_T\:arg_lens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t arg_lens[MAX_ARGS]}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of pointer arguments, including ARGLEN_PARAM if appropriate \par
}}
{\xe \v arg_types\:FPTRS_T}
{\xe \v FPTRS_T\:arg_types}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t arg_types[MAX_ARGS]}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Argument types (from ARGTYPE), including ARGTYPE_PTR if appropriate \par
}}
{\xe \v function_id\:FPTRS_T}
{\xe \v FPTRS_T\:function_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t function_id}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function ID within module \par
}}
{\xe \v module_id\:FPTRS_T}
{\xe \v FPTRS_T\:module_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t module_id}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Module ID \par
}}
{\xe \v nargs\:FPTRS_T}
{\xe \v FPTRS_T\:nargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t nargs}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of arguments to function \par
}}
{\xe \v task_id\:FPTRS_T}
{\xe \v FPTRS_T\:task_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t task_id}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task ID to use to run the function \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/{\b api.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura MPU6050_Data\par \pard\plain 
{\tc\tcl2 \v MPU6050_Data}
{\xe \v MPU6050_Data}
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b accel_x}{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b accel_y}{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b accel_z}{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b gyro_x}{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b gyro_y}{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b gyro_z}{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu6050.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura MPU6050_DataRaw\par \pard\plain 
{\tc\tcl2 \v MPU6050_DataRaw}
{\xe \v MPU6050_DataRaw}
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b ax}{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b ay}{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b az}{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b gx}{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b gy}{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int16_t {\b gz}{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu6050.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura MPU6050_Handler\par \pard\plain 
{\tc\tcl2 \v MPU6050_Handler}
{\xe \v MPU6050_Handler}
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b accel_sens}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gyro_sens}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MPU6050_Data} {\b data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de campos\par
\pard\plain 
{\xe \v accel_sens\:MPU6050_Handler}
{\xe \v MPU6050_Handler\:accel_sens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float accel_sens}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensibilidad del aceler\'F3metro [g/LSB] \par
}}
{\xe \v data\:MPU6050_Handler}
{\xe \v MPU6050_Handler\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MPU6050_Data} data}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DAltima lectura de informacion \par
}}
{\xe \v gyro_sens\:MPU6050_Handler}
{\xe \v MPU6050_Handler\:gyro_sens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float gyro_sens}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensibilidad del giroscopio [\'B0/s/LSB] \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/{\b mpu6050.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura SM_Handler\par \pard\plain 
{\tc\tcl2 \v SM_Handler}
{\xe \v SM_Handler}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de control que contiene todas las variables de la SM principal. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

SM_State {\b state}{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b MPU6050_Handler} {\b mpu}{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DS3231_Time} {\b rtc}{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b angle_deg}{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b angle_filt}{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b blink_ms}{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b blink_acc}{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b tick_ms}{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b lcd_div}{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b uart_div}{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de control que contiene todas las variables de la SM principal. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta estructura conserva el estado actual del sistema, los datos de sensores, y los contadores asociados al ciclo de muestreo. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/{\b sys_sm.c}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de archivos{\tc \v Documentaci\'F3n de archivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del RTC DS3231 utilizando dev_i2cm. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <stdbool.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estructuras de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DS3231_Time}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de tiempo. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DS3231_Status} \{ {\b DS3231_OK} = 0
, {\b DS3231_ERROR} = -1
, {\b DS3231_TIMEOUT} = -2
, {\b DS3231_NOT_READY} = -3
, {\b DS3231_INVALID_PARAM} = -4
, {\b DS3231_BUSY} = -5
 \}{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Convertidores BCD\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estas funciones convierten n\'FAmeros entre decimal normal y BCD (Binary Coded Decimal), que es el formato que usa el DS3231 para guardar hora y fecha.\par
dec2bcd:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Convierte un n\'FAmero decimal (ej: 45) a BCD (0x45). Las decenas van al nibble alto (bits 7-4). Las unidades van al nibble bajo (bits 3-0).\par}
\par
bcd2dec:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Convierte de BCD (0x45) a decimal (45). Toma el nibble alto, lo multiplica por 10 y le suma el nibble bajo. \par}
\par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS3231_Status {\b DS3231_Init} (void)\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del DS3231 en el bus de I2C. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS3231_Status {\b DS3231_ReadTime} ({\b DS3231_Time} *time)\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee la hora actual desde el DS3231. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS3231_Status {\b DS3231_SetTime} (uint8_t year, uint8_t month, uint8_t date, uint8_t day, uint8_t hour, uint8_t min, uint8_t sec)\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configura la fecha y hora del RTC. }{
}\par
}\par}
}
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del RTC DS3231 utilizando dev_i2cm. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API utilizada para leer y escribir registros del RTC DS3231. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v DS3231_Init\:ds3231.h}
{\xe \v ds3231.h\:DS3231_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS3231_Status DS3231_Init (void )}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del DS3231 en el bus de I2C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i void.} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DS3231_OK si funciono correctamente. \par
}}}{{{\b Ejemplos}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
{\xe \v DS3231_ReadTime\:ds3231.h}
{\xe \v ds3231.h\:DS3231_ReadTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS3231_Status DS3231_ReadTime ({\b DS3231_Time} * time)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee la hora actual desde el DS3231. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i time} \cell }{Estructura Time. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DS3231_OK si funciono correctamente. \par
}}}{{{\b Ejemplos}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
{\xe \v DS3231_SetTime\:ds3231.h}
{\xe \v ds3231.h\:DS3231_SetTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS3231_Status DS3231_SetTime (uint8_t year, uint8_t month, uint8_t date, uint8_t day, uint8_t hour, uint8_t min, uint8_t sec)}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configura la fecha y hora del RTC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yy} \cell }{A\'F1o (00-99) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mm} \cell }{Mes (1-12) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dd} \cell }{D\'EDa del mes (1-31) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dow} \cell }{D\'EDa de semana (1-7) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hh} \cell }{Hora (0-23) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mi} \cell }{Minutos (0-59) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ss} \cell }{Segundos (0-59) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DS3231_OK si funciono correctamente. \par
}}}{{{\b Ejemplos}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\b C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}.\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds3231.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
7 \par
8 {\cf21 #ifndef DS3231_H}\par
9 {\cf21 #define DS3231_H}\par
10 \par
11 {\cf21 #include <stdint.h>}\par
12 {\cf21 #include <stdbool.h>}\par
13 \par
14 {\cf21 #ifdef __cplusplus}\par
15 {\cf17 extern} {\cf22 "C"} \{\par
16 {\cf21 #endif}\par
17 \par
18 {\cf20 /* -------------------------------------------------------------------------- */}\par
19 {\cf20 /* ENUMS Y STRUCTS                                                             */}\par
20 {\cf20 /* -------------------------------------------------------------------------- */}\par
21 \par
22 {\cf17 typedef} {\cf17 enum} \{\par
23     DS3231_OK               =  0, {\cf20 // OK}\par
24     DS3231_ERROR            = -1, {\cf20 // Error gen\'E9rico de HAL}\par
25     DS3231_TIMEOUT          = -2, {\cf20 // Timeout de comunicaci\'F3n I2C}\par
26     DS3231_NOT_READY        = -3, {\cf20 // El DS3231 no respondi\'F3 al address}\par
27     DS3231_INVALID_PARAM    = -4, {\cf20 // Par\'E1metros inv\'E1lidos}\par
28     DS3231_BUSY             = -5, {\cf20 // HAL Busy}\par
29 \} DS3231_Status;\par
30 \par
34 {\cf17 typedef} {\cf17 struct }\{\par
35     uint8_t seconds; \par
36     uint8_t minutes; \par
37     uint8_t hours;   \par
38     uint8_t day;     \par
39     uint8_t date;    \par
40     uint8_t month;   \par
41     uint8_t year;    \par
42 \} DS3231_Time;\par
43 \par
56 {\cf17 static} {\cf17 inline} uint8_t dec2bcd(uint8_t value) \{ \par
57     {\cf19 return} (uint8_t)(((value/10) << 4) | (value % 10)); \par
58 \}\par
59 {\cf17 static} {\cf17 inline} uint8_t bcd2dec(uint8_t value) \{ \par
60     {\cf19 return} (uint8_t)(((value >> 4) * 10) + (value & 0x0F)); \par
61 \}\par
62 \par
63 {\cf20 /* -------------------------------------------------------------------------- */}\par
64 {\cf20 /* API p\'FAblica                                                                */}\par
65 {\cf20 /* -------------------------------------------------------------------------- */}\par
66 \par
72 DS3231_Status DS3231_Init({\cf18 void});\par
73 \par
79 DS3231_Status DS3231_ReadTime(DS3231_Time *time);\par
80 \par
81 \par
93 DS3231_Status DS3231_SetTime(uint8_t year, uint8_t month, uint8_t date, uint8_t day, uint8_t hour, uint8_t min, uint8_t sec);\par
94 \par
108 \par
109 {\cf21 #ifdef __cplusplus}\par
110 \}\par
111 {\cf21 #endif}\par
112 \par
113 {\cf21 #endif }{\cf20 /* DS3231_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_port.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_port.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_port.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del RTC DS3231 utilizando dev_i2cm. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include "dev_i2cm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_ADDRESS}\~ (0x68)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_RETRY_COUNT}\~ (3)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_is_ready} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del RTC DS3231 en el bus I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_write} (uint8_t reg, uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_block_write} (uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_read} (uint8_t reg, uint8_t *data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_block_read} (uint8_t reg, uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del RTC DS3231 utilizando dev_i2cm. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API utilizada para leer y escribir registros del RTC DS3231. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds3231_port.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_port.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_port.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
7 \par
8 {\cf21 #ifndef DS3231_PORT_H}\par
9 {\cf21 #define DS3231_PORT_H}\par
10 \par
11 {\cf21 #include <stdint.h>}\par
12 {\cf21 #include "dev_i2cm.h"}\par
13 \par
14 {\cf21 #ifdef __cplusplus}\par
15 {\cf17 extern} {\cf22 "C"} \{\par
16 {\cf21 #endif}\par
17 \par
21 \par
23 {\cf21 #define DS3231_ADDRESS        (0x68)}\par
24 \par
26 {\cf21 #define DS3231_RETRY_COUNT      (3)     }\par
27 \par
32 HAL_StatusTypeDef DS3231_is_ready({\cf18 void});\par
33 \par
40 HAL_StatusTypeDef DS3231_register_write(uint8_t reg, uint8_t data);\par
41 \par
48 HAL_StatusTypeDef DS3231_register_block_write(uint8_t *data, uint16_t len);\par
49 \par
56 HAL_StatusTypeDef DS3231_register_read(uint8_t reg, uint8_t *data);\par
57 \par
65 HAL_StatusTypeDef DS3231_register_block_read(uint8_t reg, uint8_t *data, uint16_t len);\par
66  {\cf20 // end group DS3231_PORT}\par
68 \par
69 {\cf21 #ifdef __cplusplus}\par
70 \}\par
71 {\cf21 #endif}\par
72 \par
73 {\cf21 #endif }{\cf20 /* DS3231_PORT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_registers.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_registers.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_registers.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Definiciones de registros y mascaras para el RTC DS3231. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_MAX_BLOCK_WRITE}\~ (8)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_MAX_BLOCK_READ}\~ (7)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_SECONDS}\~ (0x00)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_MINUTES}\~ (0x01)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_HOURS}\~ (0x02)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_DAY}\~ (0x03)  /* 1..7 */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_DATE}\~ (0x04)  /* 1..31 */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_MONTH}\~ (0x05)  /* bit7 = Centenas */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DS3231_REG_YEAR}\~ (0x06)  /* (00..99) */\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Definiciones de registros y mascaras para el RTC DS3231. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este archivo contiene las direcciones de los registros y m\'E1scaras de bits usadas por el driver DS3231. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds3231_registers.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_registers.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231_registers.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
8 \par
9 {\cf21 #ifndef DS3231_REGISTERS_H}\par
10 {\cf21 #define DS3231_REGISTERS_H}\par
11 \par
12 {\cf21 #ifdef __cplusplus}\par
13 {\cf17 extern} {\cf22 "C"} \{\par
14 {\cf21 #endif}\par
15 \par
19 \par
20 {\cf20 /* Tama\'F1os definidos para buffers. */}\par
21 {\cf21 #define DS3231_MAX_BLOCK_WRITE   (8)}\par
22 {\cf21 #define DS3231_MAX_BLOCK_READ    (7)}\par
23 \par
24 {\cf20 /* -------------------------------------------------------------------------- */}\par
25 {\cf20 /* Direcciones de Registros del DS3231                                        */}\par
26 {\cf20 /* -------------------------------------------------------------------------- */}\par
30 {\cf21 #define DS3231_REG_SECONDS       (0x00)}\par
31 {\cf21 #define DS3231_REG_MINUTES       (0x01)}\par
32 {\cf21 #define DS3231_REG_HOURS         (0x02)}\par
33 {\cf21 #define DS3231_REG_DAY           (0x03)  }{\cf20 /* 1..7 */}{\cf21 }\par
34 {\cf21 #define DS3231_REG_DATE          (0x04)  }{\cf20 /* 1..31 */}{\cf21 }\par
35 {\cf21 #define DS3231_REG_MONTH         (0x05)  }{\cf20 /* bit7 = Centenas */}{\cf21 }\par
36 {\cf21 #define DS3231_REG_YEAR          (0x06)  }{\cf20 /* (00..99) */}{\cf21 }\par
37 \par
38 \par
39 {\cf21 #ifdef __cplusplus}\par
40 \}\par
41 {\cf21 #endif}\par
42 \par
43 {\cf21 #endif }{\cf20 /* DS3231_REGISTERS_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/ds3231.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/ds3231.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/ds3231.c}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver DS3231, utilizando {\b ds3231_port.c}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ds3231.h"}\par
{\f2 #include "ds3231_registers.h"}\par
{\f2 #include "ds3231_port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS3231_Status {\b DS3231_Init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del DS3231 en el bus de I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS3231_Status {\b DS3231_ReadTime} ({\b DS3231_Time} *time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee la hora actual desde el DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS3231_Status {\b DS3231_SetTime} (uint8_t year, uint8_t month, uint8_t date, uint8_t day, uint8_t hour, uint8_t min, uint8_t sec)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configura la fecha y hora del RTC. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver DS3231, utilizando {\b ds3231_port.c}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v DS3231_Init\:ds3231.c}
{\xe \v ds3231.c\:DS3231_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS3231_Status DS3231_Init (void )}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del DS3231 en el bus de I2C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i void.} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DS3231_OK si funciono correctamente. \par
}}}}
{\xe \v DS3231_ReadTime\:ds3231.c}
{\xe \v ds3231.c\:DS3231_ReadTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS3231_Status DS3231_ReadTime ({\b DS3231_Time} * time)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee la hora actual desde el DS3231. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i time} \cell }{Estructura Time. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DS3231_OK si funciono correctamente. \par
}}}}
{\xe \v DS3231_SetTime\:ds3231.c}
{\xe \v ds3231.c\:DS3231_SetTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS3231_Status DS3231_SetTime (uint8_t year, uint8_t month, uint8_t date, uint8_t day, uint8_t hour, uint8_t min, uint8_t sec)}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configura la fecha y hora del RTC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yy} \cell }{A\'F1o (00-99) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mm} \cell }{Mes (1-12) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dd} \cell }{D\'EDa del mes (1-31) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dow} \cell }{D\'EDa de semana (1-7) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hh} \cell }{Hora (0-23) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mi} \cell }{Minutos (0-59) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ss} \cell }{Segundos (0-59) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DS3231_OK si funciono correctamente. \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/ds3231_port.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/ds3231_port.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Src/ds3231_port.c}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver DS3231 usando dev_i2cm (HAL I\'B2C). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ds3231_port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_is_ready} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del RTC DS3231 en el bus I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_write} (uint8_t reg, uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_block_write} (uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_read} (uint8_t reg, uint8_t *data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b DS3231_register_block_read} (uint8_t reg, uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del DS3231. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver DS3231 usando dev_i2cm (HAL I\'B2C). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/dev_LCD.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/dev_LCD.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/dev_LCD.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver para LCD 16x2 (HD44780) v\'EDa I\'B2C con backpack PCF8574. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "LCD_port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DEV_LCD_COLS}\~ 16{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cantidad de columnas del display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DEV_LCD_ROWS}\~ 2{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cantidad de filas del display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DEV_LCD_COLS_0}\~ 0{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Columna inicial por del display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DEV_LCD_ROWS_0}\~ 0{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primera fila del display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DEV_LCD_ROWS_1}\~ 1{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Segunda fila del display. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b LCD_Init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa el LCD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_Clear} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Limpia el display y posiciona el cursor en (0,0). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_SetCursor} (uint8_t col, uint8_t row)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Posiciona el cursor en (col, row). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_WriteChar} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un car\'E1cter en la posici\'F3n actual del cursor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_Write} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena ASCII (terminada en '\\0'). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_WriteAt} (uint8_t col, uint8_t row, char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena en la posici\'F3n determinada (col,row). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_PrintCentered} (uint8_t row, char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Centra un texto en la fila indicada. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_Cursor} (bool enable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita u deshabilita el cursor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_BlinkCursor} (bool enable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita o deshabilita el parpadeo del cursor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver para LCD 16x2 (HD44780) v\'EDa I\'B2C con backpack PCF8574. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API para inicializar el display LCD, posicionar el cursor y escribir texto. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v LCD_BlinkCursor\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_BlinkCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_BlinkCursor (bool enable)}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita o deshabilita el parpadeo del cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enable} \cell }{true: parpadeo ON; false: OFF. \cell }
{\row }
}
}}
{\xe \v LCD_Clear\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_Clear (void )}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Limpia el display y posiciona el cursor en (0,0). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa {\f2 0x01}  (Clear Display). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Requiere delay de (\'E2\'89\'882 ms). \par
}}}}
{\xe \v LCD_Cursor\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_Cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_Cursor (bool enable)}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita u deshabilita el cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enable} \cell }{true: cursor visible; false: oculto. \cell }
{\row }
}
}}
{\xe \v LCD_Init\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LCD_Init (void )}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa el LCD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Ejecuta la secuencia de wake-up,\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Env\'EDa Function Set,\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Enciende el display\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Limpia y configura el entry mode. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si complet\'F3 la secuencia correctamente. \par
}}}
}}
{\xe \v LCD_PrintCentered\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_PrintCentered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_PrintCentered (uint8_t row, char * s)}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Centra un texto en la fila indicada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Fila destino. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{Cadena a centrar. \cell }
{\row }
}
}}
{\xe \v LCD_SetCursor\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_SetCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_SetCursor (uint8_t col, uint8_t row)}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Posiciona el cursor en (col, row). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{Columna (0..DEV_LCD_COLS-1) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Fila (0..DEV_LCD_ROWS-1) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Usa las direcciones base de DDRAM por fila (ej. 0x00 y 0x40 en 16x2). \par
}}}}
{\xe \v LCD_Write\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_Write (const char * s)}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena ASCII (terminada en '\\0'). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{Puntero a cadena. \cell }
{\row }
}
}}
{\xe \v LCD_WriteAt\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_WriteAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_WriteAt (uint8_t col, uint8_t row, char * s)}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena en la posici\'F3n determinada (col,row). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{Columna a donde se va a escribir la cadena. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Fila a donde se va a escribir la cadena. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{Puntero a cadena. \cell }
{\row }
}
}}
{\xe \v LCD_WriteChar\:dev_LCD.h}
{\xe \v dev_LCD.h\:LCD_WriteChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_WriteChar (char c)}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un car\'E1cter en la posici\'F3n actual del cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{Car\'E1cter ASCII a imprimir. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_LCD.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/dev_LCD.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/dev_LCD.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
7 \par
8 {\cf21 #ifndef DEV_LCD_H}\par
9 {\cf21 #define DEV_LCD_H}\par
10 \par
11 {\cf21 #include <stdint.h>}\par
12 {\cf21 #include <stdbool.h>}\par
13 {\cf21 #include "LCD_port.h"}    \par
14 \par
15 {\cf21 #ifdef __cplusplus}\par
16 {\cf17 extern} {\cf22 "C"} \{\par
17 {\cf21 #endif}\par
18 \par
19 {\cf20 /* -------------------------------------------------------------------------- */}\par
20 {\cf20 /* CONFIGURACI\'D3N DEL M\'D3DULO                                                   */}\par
21 {\cf20 /* -------------------------------------------------------------------------- */}\par
22 \par
26 {\cf21 #ifndef DEV_LCD_COLS}\par
27 {\cf21 #define DEV_LCD_COLS 16}\par
28 {\cf21 #endif}\par
29 \par
33 {\cf21 #ifndef DEV_LCD_ROWS}\par
34 {\cf21 #define DEV_LCD_ROWS 2}\par
35 {\cf21 #endif}\par
36 \par
40 {\cf21 #define DEV_LCD_COLS_0 0}\par
41 \par
45 {\cf21 #define DEV_LCD_ROWS_0 0}\par
46 \par
50 {\cf21 #define DEV_LCD_ROWS_1 1}\par
51 \par
52 \par
53 {\cf20 /* -------------------------------------------------------------------------- */}\par
54 {\cf20 /* API P\'DABLICA                                                                */}\par
55 {\cf20 /* -------------------------------------------------------------------------- */}\par
56 \par
66 {\cf18 bool} LCD_Init({\cf18 void});\par
67 \par
74 {\cf18 void} LCD_Clear({\cf18 void});\par
75 \par
82 {\cf18 void} LCD_SetCursor(uint8_t col, uint8_t row);\par
83 \par
88 {\cf18 void} LCD_WriteChar({\cf18 char} c);\par
89 \par
94 {\cf18 void} LCD_Write({\cf17 const} {\cf18 char} *s);\par
95 \par
102 {\cf18 void} LCD_WriteAt(uint8_t col, uint8_t row, {\cf18 char} *s);\par
103 \par
109 {\cf18 void} LCD_PrintCentered(uint8_t row, {\cf18 char} *s);\par
110 \par
115 {\cf18 void} LCD_Cursor({\cf18 bool} enable);\par
116 \par
121 {\cf18 void} LCD_BlinkCursor({\cf18 bool} enable);\par
122 \par
123 \par
124 {\cf21 #ifdef __cplusplus}\par
125 \}\par
126 {\cf21 #endif}\par
127 \par
128 {\cf21 #endif }{\cf20 /* DEV_LCD_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_port.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_port.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_port.h}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primitivas de bajo nivel para LCD HD44780 v\'EDa PCF8574. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "dev_i2cm.h"}\par
{\f2 #include "LCD_registers.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LCD_RETRY_COUNT}\~ 2{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

HAL_StatusTypeDef {\b LCD_register_write} (uint8_t value){\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primitivas de bajo nivel para LCD HD44780 v\'EDa PCF8574. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LCD_port.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_port.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_port.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
5 {\cf21 #ifndef LCD_PORT_H}\par
6 {\cf21 #define LCD_PORT_H}\par
7 \par
8 {\cf21 #ifdef __cplusplus}\par
9 {\cf17 extern} {\cf22 "C"} \{\par
10 {\cf21 #endif}\par
11 \par
12 {\cf21 #include "stm32f4xx_hal.h"}\par
13 {\cf21 #include "dev_i2cm.h"}\par
14 {\cf21 #include "LCD_registers.h"}\par
15 \par
16 {\cf21 #ifndef LCD_RETRY_COUNT}\par
17 {\cf21     #define LCD_RETRY_COUNT   2}\par
18 {\cf21 #endif}\par
19 \par
20 {\cf20 /* Escritura */}\par
21 HAL_StatusTypeDef LCD_register_write(uint8_t value); \par
22 \par
23 {\cf21 #ifdef __cplusplus}\par
24 \}\par
25 {\cf21 #endif}\par
26 {\cf21 #endif }{\cf20 /* LCD_PORT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LCD_registers.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_registers.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Inc/LCD_registers.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
5 \par
6 {\cf21 #ifndef DEV_LCD_REGISTERS_H}\par
7 {\cf21 #define DEV_LCD_REGISTERS_H}\par
8 \par
9 {\cf21 #ifdef __cplusplus}\par
10 {\cf17 extern} {\cf22 "C"} \{\par
11 {\cf21 #endif}\par
12 \par
13 {\cf20 /* -------------------------------------------------------------------------- */}\par
14 {\cf20 /* Direcci\'F3n del m\'F3dulo I\'B2C (PCF8574)                                         */}\par
15 {\cf20 /* -------------------------------------------------------------------------- */}\par
16 {\cf21 #define LCD_I2C_ADDR        (0x27)}\par
17 \par
18 {\cf20 /* -------------------------------------------------------------------------- */}\par
19 {\cf20 /* Comandos b\'E1sicos                                                           */}\par
20 {\cf20 /* -------------------------------------------------------------------------- */}\par
21 {\cf21 #define LCD_CLEAR_DISPLAY     0x01}\par
22 {\cf21 #define LCD_RETURN_HOME       0x02}\par
23 {\cf21 #define LCD_ENTRY_MODE_SET    0x04}\par
24 {\cf21 #define LCD_DISPLAY_CTRL      0x08}\par
25 {\cf21 #define LCD_FUNCTION_SET      0x20}\par
26 {\cf21 #define LCD_SET_DDRAM_ADDR    0x80}\par
27 \par
28 {\cf20 /* -------------------------------------------------------------------------- */}\par
29 {\cf20 /* Flags de uso com\'FAn                                                         */}\par
30 {\cf20 /* -------------------------------------------------------------------------- */}\par
31 {\cf21 #define LCD_ENTRY_LEFT        0x02}\par
32 {\cf21 #define LCD_DISPLAY_ON        0x04}\par
33 {\cf21 #define LCD_CURSOR_ON         0x02}\par
34 {\cf21 #define LCD_BLINK_ON          0x01}\par
35 \par
36 {\cf20 /* -------------------------------------------------------------------------- */}\par
37 {\cf20 /* Bits de control del PCF8574                                               */}\par
38 {\cf20 /* -------------------------------------------------------------------------- */}\par
39 {\cf21 #define LCD_RS              0x01   }{\cf20 /* Register Select */}{\cf21 }\par
40 {\cf21 #define LCD_EN              0x04   }{\cf20 /* Enable */}{\cf21 }\par
41 {\cf21 #define LCD_BL              0x08   }{\cf20 /* Backlight */}{\cf21 }\par
42 \par
43 {\cf20 /* -------------------------------------------------------------------------- */}\par
44 {\cf20 /* Tiempos m\'EDnimos de espera (en ms)                                         */}\par
45 {\cf20 /* -------------------------------------------------------------------------- */}\par
46 {\cf21 #define LCD_DELAY_INIT1_MS  50}\par
47 {\cf21 #define LCD_DELAY_INIT2_MS  5}\par
48 {\cf21 #define LCD_DELAY_CLEAR_MS  2}\par
49 {\cf21 #define LCD_DELAY_CMD_MS    1}\par
50 \par
51 {\cf20 /* -------------------------------------------------------------------------- */}\par
52 {\cf20 /* Secuencia de wake-up                                                     */}\par
53 {\cf20 /* -------------------------------------------------------------------------- */}\par
54 {\cf21 #define LCD_WAKEUP1         0x03}\par
55 {\cf21 #define LCD_WAKEUP2         0x02}\par
56 \par
57 {\cf20 /* -------------------------------------------------------------------------- */}\par
58 {\cf20 /* Direcciones base de DDRAM (inicio de fila)                                 */}\par
59 {\cf20 /* -------------------------------------------------------------------------- */}\par
60 {\cf21 #define LCD_ROW0_OFFSET   0x00}\par
61 {\cf21 #define LCD_ROW1_OFFSET   0x40}\par
62 \par
63 {\cf20 /* -------------------------------------------------------------------------- */}\par
64 {\cf20 /* Valores utilizados para centrar el string.                                 */}\par
65 {\cf20 /* -------------------------------------------------------------------------- */}\par
66 {\cf21 #define LCD_CENTER_DIVISOR       2   }{\cf20 /* Divide el espacio libre en dos para centrar */}{\cf21 }\par
67 {\cf21 #define LCD_START_COL_DEFAULT    0   }{\cf20 /* Columna inicial, utilizada cuando el texto no entra */}{\cf21 }\par
68 \par
69 {\cf20 /* -------------------------------------------------------------------------- */}\par
70 {\cf20 /* Tipo de data a enviar (comando/dato)                                       */}\par
71 {\cf20 /* -------------------------------------------------------------------------- */}\par
72 {\cf21 #define LCD_REG_CMD             0x00}\par
73 {\cf21 #define LCD_REG_DATA            0x01}\par
74 \par
75 {\cf21 #ifdef __cplusplus}\par
76 \}\par
77 {\cf21 #endif}\par
78 \par
79 {\cf21 #endif }{\cf20 /* DEV_LCD_REGISTERS_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/dev_LCD.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/dev_LCD.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/dev_LCD.c}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Librer\'EDa de control para LCD 16x2 v\'EDa I\'B2C (PCF8574) con RTOS. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dev_LCD.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "cmsis_os2.h"}\par
{\f2 #include "stm32f4xx_hal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b LCD_Init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa el LCD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_Clear} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Limpia el display y posiciona el cursor en (0,0). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_SetCursor} (uint8_t col, uint8_t row)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Posiciona el cursor en (col, row). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_WriteChar} (char character)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un car\'E1cter en la posici\'F3n actual del cursor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_Write} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena ASCII (terminada en '\\0'). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_WriteAt} (uint8_t col, uint8_t row, char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena en la posici\'F3n determinada (col,row). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_PrintCentered} (uint8_t row, char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Centra un texto en la fila indicada. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_Cursor} (bool enable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita u deshabilita el cursor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LCD_BlinkCursor} (bool enable)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita o deshabilita el parpadeo del cursor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Librer\'EDa de control para LCD 16x2 v\'EDa I\'B2C (PCF8574) con RTOS. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v LCD_BlinkCursor\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_BlinkCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_BlinkCursor (bool enable)}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita o deshabilita el parpadeo del cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enable} \cell }{true: parpadeo ON; false: OFF. \cell }
{\row }
}
}}
{\xe \v LCD_Clear\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_Clear (void )}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Limpia el display y posiciona el cursor en (0,0). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa {\f2 0x01}  (Clear Display). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Requiere delay de (\'E2\'89\'882 ms). \par
}}}}
{\xe \v LCD_Cursor\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_Cursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_Cursor (bool enable)}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Habilita u deshabilita el cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enable} \cell }{true: cursor visible; false: oculto. \cell }
{\row }
}
}}
{\xe \v LCD_Init\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LCD_Init (void )}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa el LCD. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Ejecuta la secuencia de wake-up,\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Env\'EDa Function Set,\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Enciende el display\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Limpia y configura el entry mode. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si complet\'F3 la secuencia correctamente. \par
}}}
}}
{\xe \v LCD_PrintCentered\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_PrintCentered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_PrintCentered (uint8_t row, char * s)}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Centra un texto en la fila indicada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Fila destino. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{Cadena a centrar. \cell }
{\row }
}
}}
{\xe \v LCD_SetCursor\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_SetCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_SetCursor (uint8_t col, uint8_t row)}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Posiciona el cursor en (col, row). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{Columna (0..DEV_LCD_COLS-1) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Fila (0..DEV_LCD_ROWS-1) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Usa las direcciones base de DDRAM por fila (ej. 0x00 y 0x40 en 16x2). \par
}}}}
{\xe \v LCD_Write\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_Write (const char * s)}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena ASCII (terminada en '\\0'). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{Puntero a cadena. \cell }
{\row }
}
}}
{\xe \v LCD_WriteAt\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_WriteAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_WriteAt (uint8_t col, uint8_t row, char * s)}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe una cadena en la posici\'F3n determinada (col,row). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{Columna a donde se va a escribir la cadena. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Fila a donde se va a escribir la cadena. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{Puntero a cadena. \cell }
{\row }
}
}}
{\xe \v LCD_WriteChar\:dev_LCD.c}
{\xe \v dev_LCD.c\:LCD_WriteChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LCD_WriteChar (char c)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un car\'E1cter en la posici\'F3n actual del cursor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{Car\'E1cter ASCII a imprimir. \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/LCD_port.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/LCD_port.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/LCD16x2/Src/LCD_port.c}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n de primitivas de bajo nivel para LCD HD44780 v\'EDa PCF8574. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LCD_port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

HAL_StatusTypeDef {\b LCD_register_write} (uint8_t value){\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n de primitivas de bajo nivel para LCD HD44780 v\'EDa PCF8574. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050.h}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del MPU6050 utilizando dev_i2cm. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "mpu6050_registers.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estructuras de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MPU6050_Data}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MPU6050_DataRaw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MPU6050_Handler}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MPU6050_Status} \{ {\b MPU6050_OK} = 0
, {\b MPU6050_ERROR} = -1
, {\b MPU6050_TIMEOUT} = -2
, {\b MPU6050_NOT_READY} = -3
, {\b MPU6050_INVALID_PARAM} = -4
, {\b MPU6050_BUSY} = -5
 \}{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

MPU6050_Status {\b MPU6050_Init} ({\b MPU6050_Handler} *device){\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

MPU6050_Status {\b MPU6050_Read} ({\b MPU6050_Handler} *device){\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del MPU6050 utilizando dev_i2cm. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API utilizada para leer y escribir registros del MPU6050. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpu6050.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
7 \par
8 {\cf21 #ifndef MPU6050_H}\par
9 {\cf21 #define MPU6050_H}\par
10 \par
11 {\cf21 #include <stdint.h>}\par
12 {\cf21 #include <stdbool.h>}\par
13 {\cf21 #include "stm32f4xx_hal.h"}\par
14 {\cf21 #include "mpu6050_registers.h"}\par
15 \par
16 {\cf21 #ifdef __cplusplus}\par
17 {\cf17 extern} {\cf22 "C"} \{\par
18 {\cf21 #endif}\par
19 \par
20 {\cf20 /* -------------------------------------------------------------------------- */}\par
21 {\cf20 /* ENUMERACIONES Y ESTRUCTURAS                                                          */}\par
22 {\cf20 /* -------------------------------------------------------------------------- */}\par
23 {\cf17 typedef} {\cf17 enum} \{\par
24     MPU6050_OK              =  0, {\cf20 // OK}\par
25     MPU6050_ERROR           = -1, {\cf20 // Error gen\'E9rico de HAL}\par
26     MPU6050_TIMEOUT         = -2, {\cf20 // Timeout de comunicaci\'F3n I2C}\par
27     MPU6050_NOT_READY       = -3, {\cf20 // El MPU6050 no respondi\'F3 al address}\par
28     MPU6050_INVALID_PARAM   = -4, {\cf20 // Par\'E1metros inv\'E1lidos}\par
29     MPU6050_BUSY            = -5, {\cf20 // HAL Busy}\par
30 \} MPU6050_Status;\par
31 \par
32 {\cf17 typedef} {\cf17 struct }\{\par
33     {\cf18 float} accel_x;\par
34     {\cf18 float} accel_y;\par
35     {\cf18 float} accel_z;\par
36     {\cf18 float} gyro_x;\par
37     {\cf18 float} gyro_y;\par
38     {\cf18 float} gyro_z;    \par
39 \} MPU6050_Data;\par
40 \par
41 {\cf17 typedef} {\cf17 struct }\{\par
42     int16_t ax, ay, az;\par
43     int16_t gx, gy, gz;\par
44 \} MPU6050_DataRaw;\par
45 \par
46 {\cf17 typedef} {\cf17 struct }\{\par
47     {\cf18 float} accel_sens;               \par
48     {\cf18 float} gyro_sens;                \par
49     MPU6050_Data data;              \par
50 \} MPU6050_Handler;\par
51 \par
52 {\cf20 /* -------------------------------------------------------------------------- */}\par
53 {\cf20 /* API P\'DABLICA                                                                */}\par
54 {\cf20 /* -------------------------------------------------------------------------- */}\par
55 \par
56 MPU6050_Status MPU6050_Init(MPU6050_Handler *device);\par
57 MPU6050_Status MPU6050_Read(MPU6050_Handler*device);\par
58 \par
59 {\cf21 #ifdef __cplusplus}\par
60 \}\par
61 {\cf21 #endif}\par
62 \par
63 {\cf21 #endif }{\cf20 /* MPU6050_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_port.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_port.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_port.h}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del MPU6050 utilizando dev_i2cm. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include "dev_i2cm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MPU6050_ADDRESS}\~ (0x69)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_RETRY_COUNT}\~ (3)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_is_ready} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del MPU6050 en el bus I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_write} (uint8_t reg, uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_block_write} (uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_read} (uint8_t reg, uint8_t *data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_block_read} (uint8_t reg, uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver del MPU6050 utilizando dev_i2cm. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
API utilizada para leer y escribir registros del MPU6050. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpu6050_port.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_port.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_port.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
7 \par
8 {\cf21 #ifndef MPU6050_PORT_H}\par
9 {\cf21 #define MPU6050_PORT_H}\par
10 \par
11 {\cf21 #include <stdint.h>}\par
12 {\cf21 #include "dev_i2cm.h"}\par
13 \par
14 {\cf21 #ifdef __cplusplus}\par
15 {\cf17 extern} {\cf22 "C"} \{\par
16 {\cf21 #endif}\par
17 \par
21 \par
23 {\cf21 #define MPU6050_ADDRESS        (0x69)}\par
24 \par
26 {\cf21 #define MPU6050_RETRY_COUNT      (3)     }\par
27 \par
32 HAL_StatusTypeDef MPU6050_is_ready({\cf18 void});\par
33 \par
40 HAL_StatusTypeDef MPU6050_register_write(uint8_t reg, uint8_t data);\par
41 \par
48 HAL_StatusTypeDef MPU6050_register_block_write(uint8_t *data, uint16_t len);\par
49 \par
56 HAL_StatusTypeDef MPU6050_register_read(uint8_t reg, uint8_t *data);\par
57 \par
65 HAL_StatusTypeDef MPU6050_register_block_read(uint8_t reg, uint8_t *data, uint16_t len);\par
66  {\cf20 // end group MPU6050_PORT}\par
68 \par
69 {\cf21 #ifdef __cplusplus}\par
70 \}\par
71 {\cf21 #endif}\par
72 \par
73 {\cf21 #endif }{\cf20 /* MPU6050_PORT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_registers.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_registers.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_registers.h}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Definiciones de registros y mascaras para el MPU6050. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_REG_CONFIG}\~ 0x1A{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_REG_GYRO_CONFIG}\~ 0x1B{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_REG_ACCEL_CONFIG}\~ 0x1C{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_REG_ACCEL}\~ 0x3B{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_REG_PWR_MGMT_1}\~ 0x6B{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_PWR_CLKSEL_MASK}\~ 0x07 /* 0: Int 8MHz, 1: PLL X-gyro, etc. */{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_GYRO_FS_SEL_SHIFT}\~ 3{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_GYRO_FS_SEL_MASK}\~ (0x03 << MPU6050_GYRO_FS_SEL_SHIFT) /* 0:250,1:500,2:1000,3:2000 dps */{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_ACCEL_FS_SEL_SHIFT}\~ 3{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_ACCEL_FS_SEL_MASK}\~ (0x03 << MPU6050_ACCEL_FS_SEL_SHIFT) /* 0:\'B12g,1:\'B14g,2:\'B18g,3:\'B116g */{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_DLPF_44HZ}\~ 3{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b MPU6050_AX} = 0
, {\b MPU6050_AY} = 2
, {\b MPU6050_AZ} = 4
, {\b MPU6050_GX} = 8
, {\b MPU6050_GY} = 10
, {\b MPU6050_GZ} = 12
 \}{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Definiciones de registros y mascaras para el MPU6050. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este archivo contiene las direcciones de los registros y m\'E1scaras de bits usadas por el driver mpu6050. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpu6050_registers.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_registers.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu6050_registers.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
8 \par
9 {\cf21 #ifndef MPU6050_REGS_H}\par
10 {\cf21 #define MPU6050_REGS_H}\par
11 \par
12 \par
13 {\cf20 /* ---------------- Registros utilizados ---------------- */}\par
14 {\cf21 #define MPU6050_REG_CONFIG         0x1A}\par
15 {\cf21 #define MPU6050_REG_GYRO_CONFIG    0x1B}\par
16 {\cf21 #define MPU6050_REG_ACCEL_CONFIG   0x1C}\par
17 {\cf21 #define MPU6050_REG_ACCEL          0x3B}\par
18 {\cf21 #define MPU6050_REG_PWR_MGMT_1     0x6B}\par
19 \par
20 {\cf20 /* --------------- M\'E1scaras / shifts utilizados ---------- */}\par
21 {\cf20 /* PWR_MGMT_1 */}\par
22 {\cf21 #define MPU6050_PWR_CLKSEL_MASK    0x07 }{\cf20 /* 0: Int 8MHz, 1: PLL X-gyro, etc. */}{\cf21 }\par
23 \par
24 {\cf20 /* GYRO_CONFIG */}\par
25 {\cf21 #define MPU6050_GYRO_FS_SEL_SHIFT  3}\par
26 {\cf21 #define MPU6050_GYRO_FS_SEL_MASK   (0x03 << MPU6050_GYRO_FS_SEL_SHIFT) }{\cf20 /* 0:250,1:500,2:1000,3:2000 dps */}{\cf21 }\par
27 \par
28 {\cf20 /* ACCEL_CONFIG */}\par
29 {\cf21 #define MPU6050_ACCEL_FS_SEL_SHIFT 3}\par
30 {\cf21 #define MPU6050_ACCEL_FS_SEL_MASK  (0x03 << MPU6050_ACCEL_FS_SEL_SHIFT) }{\cf20 /* 0:\'B12g,1:\'B14g,2:\'B18g,3:\'B116g */}{\cf21 }\par
31 \par
32 {\cf20 /* FILTRO DIGITAL    */}\par
33 {\cf21 #define MPU6050_DLPF_44HZ        3}\par
34 \par
35 {\cf17 enum} \{\par
36   MPU6050_AX = 0,\par
37   MPU6050_AY = 2, \par
38   MPU6050_AZ = 4, \par
39   MPU6050_GX = 8, \par
40   MPU6050_GY = 10, \par
41   MPU6050_GZ = 12, \par
42 \};\par
43 \par
44 {\cf21 #endif }{\cf20 // MPU6050_REGS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mpu_math.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu_math.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Inc/mpu_math.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <math.h>}\par
3 \par
4 {\cf21 #ifndef RAD_TO_DEG}\par
5 {\cf21 #define RAD_TO_DEG (180.0f / 3.14159265358979323846f)}\par
6 {\cf21 #endif}\par
7 \par
8 {\cf20 /* ====== C\'E1lculo de inclinaci\'F3n ======}\par
9 {\cf20  * F\'F3rmula: atan2f(-Ax, sqrt(Ay^2 + Az^2)) * RAD_TO_DEG}\par
10 {\cf20  * - Devuelve el \'E1ngulo de inclinaci\'F3n respecto del eje X (en grados).}\par
11 {\cf20  * - ax, ay, az deben estar expresados en "g" (aceleraci\'F3n normalizada).}\par
12 {\cf20  */}\par
13 {\cf17 static} {\cf17 inline} {\cf18 float} mpu_get_angle_deg({\cf18 float} ax, {\cf18 float} ay, {\cf18 float} az)\par
14 \{\par
15     {\cf19 return} atanf(-ax / sqrtf(ay*ay + az*az)) * RAD_TO_DEG;\par
16 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/mpu6050.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/mpu6050.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/mpu6050.c}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver del MPU-6050. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mpu6050.h"}\par
{\f2 #include "mpu6050_registers.h"}\par
{\f2 #include "mpu6050_port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MPU6050_READ_LEN}\~ 14{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

MPU6050_Status {\b MPU6050_Init} ({\b MPU6050_Handler} *device){\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

MPU6050_Status {\b MPU6050_Read} ({\b MPU6050_Handler} *device){\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver del MPU-6050. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/mpu6050_port.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/mpu6050_port.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/Devices/MPU6050/Src/mpu6050_port.c}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver MPU6050 usando dev_i2cm (HAL I\'B2C). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mpu6050_port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_is_ready} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica la presencia del MPU6050 en el bus I2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_write} (uint8_t reg, uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un registro del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_block_write} (uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un bloque de datos del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_read} (uint8_t reg, uint8_t *data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b MPU6050_register_block_read} (uint8_t reg, uint8_t *data, uint16_t len)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un registro del MPU6050. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementaci\'F3n del driver MPU6050 usando dev_i2cm (HAL I\'B2C). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api.h}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for {\b main.c} file. This file contains the common defines of the application. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include <stdint.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estructuras de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FPTRS_T}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b COMMAND_DATA}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REG_STATUS}\~ 0{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REG_MODULE_ID}\~ 1{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REG_FUNCTION_ID}\~ 2{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REG_ARG_TYPES}\~ 3{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b REG_DATA_START}\~ 4{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b API_GO}\~ 0x2{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b API_BUSY}\~ 0x1{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ARGTYPE_U32}\~ 0{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ARGTYPE_TLV}\~ 1{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b API_ALIGN}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRUCT_COUNT}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ARGTYPE_MASK}\~ 0x7F{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TLV_TYPE}\~ 0{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TLV_LENGTH}\~ 1{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TLV_VALUE}\~ 4{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TLV_HDRLEN}\~ 4{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ARGTYPE_PTR}\~ 0x80{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ARGLEN_PARAM}\~ 0x8000{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MODULE_GROUP_SHIFT}\~ 6{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MODULE_GROUP_MASK}\~ ( (0xFF << MODULE_GROUP_SHIFT) & 0xFF ){\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MODULE_GROUP}(m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MODULE_ISGROUP}(m,  g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MODULE_INDEX}(m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MODULE_GROUPS}\~ 4{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b NONE_modules}\~ 0xff{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MAX_ARGS}\~ 8{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b COMMAND_SIZE}\~ 1280{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef enum TASK_T {\b TASK_TYPE}{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef HAL_StatusTypeDef(* {\b fptr_0}) (void){\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef HAL_StatusTypeDef(* {\b fptr_1}) (uintptr_t arg0){\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef HAL_StatusTypeDef(* {\b fptr_2}) (uintptr_t arg0, uintptr_t arg1){\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef HAL_StatusTypeDef(* {\b fptr_3}) (uintptr_t arg0, uintptr_t arg1, uintptr_t arg2){\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef HAL_StatusTypeDef(* {\b fptr_4}) (uintptr_t arg0, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3){\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef HAL_StatusTypeDef(* {\b fptr_5}) (uintptr_t arg0, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4){\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct {\b FPTRS_T} {\b FPTRS}{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TASK_T} \{ {\b NONE_TASK_ID} = 0
, {\b ANY_TASK_ID} = 1
 \}{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ARG_TYPE} \{ {\b UINT8_T}
, {\b INT8_T}
, {\b UINT16_T}
, {\b INT16_T}
, {\b UINT32_T}
, {\b INT32_T}
, {\b FLOAT32_T}
, {\b FLOAT16_T}
, {\b UINT64_T}
, {\b __VOID}
 \}{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b exec_fn} (uint8_t *data){\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b COMMAND_DATA} {\b command}{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for {\b main.c} file. This file contains the common defines of the application. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v API_ALIGN\:api.h}
{\xe \v api.h\:API_ALIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define API_ALIGN( x)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( ((x)+3) & 0xFFFC )\par
}
}
{\xe \v MODULE_GROUP\:api.h}
{\xe \v api.h\:MODULE_GROUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MODULE_GROUP( m)}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( (m) >> MODULE_GROUP_SHIFT )\par
}
}
{\xe \v MODULE_INDEX\:api.h}
{\xe \v api.h\:MODULE_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MODULE_INDEX( m)}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( (m) & ~MODULE_GROUP_MASK )\par
}
}
{\xe \v MODULE_ISGROUP\:api.h}
{\xe \v api.h\:MODULE_ISGROUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MODULE_ISGROUP( m,  g)}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( (m) & MODULE_GROUP_MASK == (g) )\par
}
}
{\xe \v STRUCT_COUNT\:api.h}
{\xe \v api.h\:STRUCT_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRUCT_COUNT( x)}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( {\cf17 sizeof}(x) / {\cf17 sizeof}(x[0]) )\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
api.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 \par
21 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
22 {\cf21 #ifndef __API_H}\par
23 {\cf21 #define __API_H}\par
24 \par
25 {\cf21 #ifdef __cplusplus}\par
26 {\cf17 extern} {\cf22 "C"} \{\par
27 {\cf21 #endif}\par
28 \par
29 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
30 {\cf21 #include "stm32f4xx_hal.h"}\par
31 {\cf21 #include <stdint.h>}\par
32 \par
33 {\cf21 #define REG_STATUS       0}\par
34 {\cf21 #define REG_MODULE_ID    1}\par
35 {\cf21 #define REG_FUNCTION_ID  2}\par
36 {\cf21 #define REG_ARG_TYPES    3}\par
37 {\cf21 #define REG_DATA_START   4}\par
38 \par
39 {\cf21 #define API_GO           0x2}\par
40 {\cf21 #define API_BUSY         0x1}\par
41 \par
42 {\cf21 #define ARGTYPE_U32      0}\par
43 {\cf21 #define ARGTYPE_TLV      1}\par
44 \par
45 {\cf21 #define API_ALIGN(x)    ( ((x)+3) & 0xFFFC )}\par
46 {\cf21 #define STRUCT_COUNT(x) ( sizeof(x) / sizeof(x[0]) )}\par
47 \par
48 {\cf21 #define ARGTYPE_MASK     0x7F}\par
49 \par
50 {\cf21 #define TLV_TYPE         0}\par
51 {\cf21 #define TLV_LENGTH       1}\par
52 {\cf21 #define TLV_VALUE        4}\par
53 {\cf21 #define TLV_HDRLEN       4}\par
54 \par
55 {\cf21 #define ARGTYPE_PTR      0x80}\par
56 \par
57 {\cf21 #define ARGLEN_PARAM    0x8000}\par
58 \par
59 {\cf17 typedef} {\cf17 enum} TASK_T \{\par
60   NONE_TASK_ID  = 0,\par
61   ANY_TASK_ID   = 1,\par
62 \} TASK_TYPE;\par
63 \par
64 {\cf17 typedef} {\cf17 enum} \{\par
65     UINT8_T,   {\cf20 // equivalente a uint8_t}\par
66     INT8_T,    {\cf20 // equivalente a int8_t}\par
67     UINT16_T,  {\cf20 // equivalente a uint16_t}\par
68     INT16_T,   {\cf20 // equivalente a int16_t}\par
69     UINT32_T,  {\cf20 // equivalente a uint32_t}\par
70     INT32_T,   {\cf20 // equivalente a int32_t}\par
71     FLOAT32_T, {\cf20 // equivalente a float (32-bit IEEE-754)}\par
72     FLOAT16_T, {\cf20 // equivalente a _Float16 / __fp16 (si lo soporta el compilador)}\par
73     UINT64_T,  {\cf20 // equivalente a uint64_t}\par
74     __VOID     {\cf20 // equivalente a void}\par
75 \} ARG_TYPE;\par
76 \par
77 {\cf21 #define MODULE_GROUP_SHIFT  6}\par
78 {\cf21 #define MODULE_GROUP_MASK     ( (0xFF << MODULE_GROUP_SHIFT) & 0xFF )}\par
79 {\cf21 #define MODULE_GROUP(m)       ( (m) >> MODULE_GROUP_SHIFT ) }\par
80 {\cf21 #define MODULE_ISGROUP(m, g)  ( (m) & MODULE_GROUP_MASK == (g) )}\par
81 {\cf21 #define MODULE_INDEX(m)       ( (m) & ~MODULE_GROUP_MASK )}\par
82 {\cf21 #define MODULE_GROUPS        4}\par
83 {\cf21 #define NONE_modules         0xff}\par
84 \par
85 {\cf17 typedef} HAL_StatusTypeDef (*fptr_0) (void);\par
86 {\cf17 typedef} HAL_StatusTypeDef (*fptr_1) (uintptr_t arg0);\par
87 {\cf17 typedef} HAL_StatusTypeDef (*fptr_2) (uintptr_t arg0, uintptr_t arg1);\par
88 {\cf17 typedef} HAL_StatusTypeDef (*fptr_3) (uintptr_t arg0, uintptr_t arg1, uintptr_t arg2);\par
89 {\cf17 typedef} HAL_StatusTypeDef (*fptr_4) (uintptr_t arg0, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);\par
90 {\cf17 typedef} HAL_StatusTypeDef (*fptr_5) (uintptr_t arg0, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);\par
91 \par
92 {\cf21 #define MAX_ARGS 8}\par
93 \par
94 {\cf17 typedef} {\cf17 struct }FPTRS_T \{\par
95     uint8_t module_id;            \par
96     uint8_t function_id;          \par
97     uint8_t task_id;              \par
98     uint8_t nargs;                \par
99     uint8_t arg_types[MAX_ARGS];  \par
100     uint16_t arg_lens[MAX_ARGS];  \par
101 \par
102     {\cf17 union }\{\par
103         fptr_0 f0;\par
104         fptr_1 f1;\par
105         fptr_2 f2;\par
106         fptr_3 f3;\par
107         fptr_4 f4;\par
108         fptr_5 f5;\par
109     \} fptr;\par
110 \} FPTRS;\par
111 \par
112 \par
113 {\cf21 #define COMMAND_SIZE 1280}\par
114 \par
115 {\cf17 typedef} {\cf17 struct }\{\par
116   uint8_t buffer[COMMAND_SIZE];\par
117 \} COMMAND_DATA __attribute__((aligned(4)));\par
118 \par
119 {\cf17 extern} COMMAND_DATA command;\par
120 \par
121 {\cf17 extern} {\cf18 void} exec_fn(uint8_t *data);\par
122 \par
123 {\cf21 #ifdef __cplusplus}\par
124 \}\par
125 {\cf21 #endif}\par
126 \par
127 {\cf21 #endif }{\cf20 /* __API_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_i2cm_api.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/dev_i2cm_api.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/dev_i2cm_api.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef DEV_I2CM_API_H}\par
3 {\cf21 #define DEV_I2CM_API_H}\par
4 \par
5 {\cf21 #include "api.h"}\par
6 \par
7 {\cf21 #define DEV_I2CM_API_ID 1}\par
8 \par
9 {\cf20 /* API Identifiers */}\par
10 {\cf17 enum} DEV_I2CM_API \{\par
11     I2CM_INITSTART = 0,\par
12     I2CM_DEINIT = 1,\par
13     I2CM_WRITE = 2,\par
14     I2CM_READ = 3,\par
15     I2CM_READ_SR = 4,\par
16     I2CM_ISDEVICEREADY = 5,\par
17 \};\par
18 \par
19 {\cf20 /* API Function List */}\par
20 {\cf21 #define DEV_I2CM_FUNCTIONS_COUNT 6}\par
21 {\cf17 extern} {\cf17 const} FPTRS DEV_I2CM_FPTRS[DEV_I2CM_FUNCTIONS_COUNT];\par
22 \par
24 {\cf21 #define I2C_TIMEOUT (5000)}\par
25 \par
26  \par
27 \par
35 HAL_StatusTypeDef I2CM_InitStart ({\cf18 void});\par
36 \par
37  \par
38 \par
46 HAL_StatusTypeDef I2CM_DeInit ({\cf18 void});\par
47 \par
48  \par
49 \par
60 HAL_StatusTypeDef I2CM_Write (uint8_t address, uint8_t* data, uint16_t size);\par
61 \par
62  \par
63 \par
74 HAL_StatusTypeDef I2CM_Read (uint8_t address, uint8_t* data, uint16_t size);\par
75 \par
76  \par
77 \par
89 HAL_StatusTypeDef I2CM_Read_Sr (uint8_t address, uint8_t reg, uint8_t* data, uint16_t size);\par
90 \par
91  \par
92 \par
102 HAL_StatusTypeDef I2CM_IsDeviceReady (uint8_t address, uint32_t trials);\par
103 \par
104  \par
105  \par
106 \par
107 {\cf21 #endif }{\cf20 // _DEV__API_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_i2cs_api.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/dev_i2cs_api.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/dev_i2cs_api.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef DEV_I2CS_API_H}\par
3 {\cf21 #define DEV_I2CS_API_H}\par
4 \par
5 {\cf21 #include "api.h"}\par
6 \par
7 {\cf21 #define DEV_I2CS_API_ID 0}\par
8 \par
9 {\cf20 /* API Identifiers */}\par
10 {\cf17 enum} DEV_I2CS_API \{\par
11     I2CS_INITSTART = 0,\par
12     I2CS_DEINIT = 1,\par
13     I2C2_ENABLEACKNOWLEDGE = 2,\par
14     I2C2_DISABLEACKNOWLEDGE = 3,\par
15 \};\par
16 \par
17 {\cf20 /* API Function List */}\par
18 {\cf21 #define DEV_I2CS_FUNCTIONS_COUNT 4}\par
19 {\cf17 extern} {\cf17 const} FPTRS DEV_I2CS_FPTRS[DEV_I2CS_FUNCTIONS_COUNT];\par
20 \par
22 {\cf21 #define I2CS_SLAVE_ADDR 0x50}\par
23 \par
24  \par
26 {\cf17 enum} I2CS_STATE \{\par
28     I2CS_STATE_READY = 0,\par
30     I2CS_STATE_GET_ADDR = 1,\par
32     I2CS_STATE_SET_ADDR = 2,\par
34     I2CS_STATE_GET_DATA = 3,\par
36     I2CS_STATE_SET_DATA = 4,\par
38     I2CS_STATE_NACK = 5,\par
39 \};\par
40 \par
41  \par
42 \par
50 HAL_StatusTypeDef I2CS_InitStart ({\cf18 void});\par
51 \par
52  \par
53 \par
61 HAL_StatusTypeDef I2CS_DeInit ({\cf18 void});\par
62 \par
63  \par
64 \par
72 HAL_StatusTypeDef I2C2_EnableAcknowledge ({\cf18 void});\par
73 \par
74  \par
75 \par
83 HAL_StatusTypeDef I2C2_DisableAcknowledge ({\cf18 void});\par
84 \par
85  \par
86  \par
87 \par
88 {\cf21 #endif }{\cf20 // _DEV__API_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_modules.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/dev_modules.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/dev_modules.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef _DEV_MODULES_H}\par
2 {\cf21 #define _DEV_MODULES_H}\par
3 \par
4 {\cf21 #include "api.h"}\par
5 \par
6 {\cf21 #define DEV_MODULES_COUNT 2}\par
7 \par
8 {\cf17 extern} {\cf17 const} FPTRS *FPTRS_LIST_DEV[DEV_MODULES_COUNT];\par
9 {\cf17 extern} {\cf17 const} uint8_t FPTRS_COUNT_DEV[DEV_MODULES_COUNT];\par
10 \par
11 {\cf21 #endif }{\cf20 // _DEV_MODULES_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sys_dbg_api.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/sys_dbg_api.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/sys_dbg_api.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef SYS_DBG_API_H}\par
3 {\cf21 #define SYS_DBG_API_H}\par
4 \par
5 {\cf21 #include "api.h"}\par
6 {\cf21 #include "FreeRTOS.h"}\par
7 {\cf21 #include "task.h"}\par
8 {\cf21 #include "cmsis_os2.h"}\par
9 \par
10 {\cf21 #define SYS_DBG_API_ID 64}\par
11 {\cf21 #define OS_NOTIFY_I2C_COMMAND (1 << 0)}\par
12 \par
13 {\cf17 extern} osThreadId_t DebugTaskHandle;\par
14 \par
15 \par
16 {\cf20 /* API Identifiers */}\par
17 {\cf17 enum} SYS_DBG_API \{\par
18     DBG_INITOS = 0,\par
19     DBG_ITER = 1,\par
20 \};\par
21 \par
22 {\cf20 /* API Function List */}\par
23 {\cf21 #define SYS_DBG_FUNCTIONS_COUNT 2}\par
24 {\cf17 extern} {\cf17 const} FPTRS SYS_DBG_FPTRS[SYS_DBG_FUNCTIONS_COUNT];\par
25 \par
26 \par
34 HAL_StatusTypeDef DBG_InitOS ({\cf18 void});\par
35 \par
36  \par
37 \par
45 {\cf18 void} DBG_Iter ({\cf18 void} *argument);\par
46 \par
47  \par
48  \par
49 \par
50 {\cf21 #endif }{\cf20 // _SYS__API_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sys_modules.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/sys_modules.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/sys_modules.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef _SYS_MODULES_H}\par
2 {\cf21 #define _SYS_MODULES_H}\par
3 \par
4 {\cf21 #include "api.h"}\par
5 \par
6 {\cf21 #define SYS_MODULES_COUNT 1}\par
7 \par
8 {\cf17 extern} {\cf17 const} FPTRS *FPTRS_LIST_SYS[SYS_MODULES_COUNT];\par
9 {\cf17 extern} {\cf17 const} uint8_t FPTRS_COUNT_SYS[SYS_MODULES_COUNT];\par
10 \par
11 {\cf21 #endif }{\cf20 // _SYS_MODULES_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sys_sm.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/sys_sm.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/api/sys_sm.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SYS_SM_API_H}\par
2 {\cf21 #define SYS_SM_API_H}\par
3 \par
4 {\cf21 #ifdef __cplusplus}\par
5 {\cf17 extern} {\cf22 "C"} \{\par
6 {\cf21 #endif}\par
7 \par
8 {\cf21 #include "stm32f4xx_hal.h"}  {\cf20 // por HAL_StatusTypeDef}\par
9 \par
10 {\cf20 /* -------------------------------------------------------------------------- */}\par
11 {\cf20 /*                         Estados de la SM                                   */}\par
12 {\cf20 /* -------------------------------------------------------------------------- */}\par
13 {\cf17 typedef} {\cf17 enum} \{\par
14     ST_INIT = 0,\par
15     ST_READ_SENSORS,\par
16     ST_UPDATE_LED,\par
17     ST_UPDATE_UART,\par
18     ST_ERROR,\par
19 \} SM_State;\par
20 \par
21 {\cf20 /* -------------------------------------------------------------------------- */}\par
22 {\cf20 /*                                API p\'FAblica                                 */}\par
23 {\cf20 /* -------------------------------------------------------------------------- */}\par
24 \par
29 HAL_StatusTypeDef SM_InitOS({\cf18 void});\par
30 \par
34 {\cf18 void} SM_Iter({\cf18 void} *argument);\par
35 \par
36 \par
37 {\cf21 #ifdef __cplusplus}\par
38 \}\par
39 {\cf21 #endif}\par
40 \par
41 {\cf21 #endif }{\cf20 /* SYS_SM_API_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_gpio.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
21 {\cf21 #ifndef __GPIO_H__}\par
22 {\cf21 #define __GPIO_H__}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25 {\cf17 extern} {\cf22 "C"} \{\par
26 {\cf21 #endif}\par
27 \par
28 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
29 {\cf21 #include "dev_gpio_cfg.h"}\par
30 {\cf21 #include "stm32f4xx_hal.h"}\par
31 \par
32 {\cf20 /* USER CODE BEGIN Includes */}\par
33 \par
34 {\cf20 /* USER CODE END Includes */}\par
35 \par
36 {\cf20 /* USER CODE BEGIN Private defines */}\par
37 \par
38 {\cf20 /* USER CODE END Private defines */}\par
39 \par
40 {\cf18 void} DEV_GPIO_Init({\cf18 void});\par
41 \par
42 {\cf20 /* USER CODE BEGIN Prototypes */}\par
43 \par
44 {\cf20 /* USER CODE END Prototypes */}\par
45 \par
46 {\cf21 #ifdef __cplusplus}\par
47 \}\par
48 {\cf21 #endif}\par
49 {\cf21 #endif }{\cf20 /*__ GPIO_H__ */}{\cf21 }\par
50 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio_cfg.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio_cfg.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio_cfg.h}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains all the function prototypes for the gpio.c file. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b B1_Pin}\~ GPIO_PIN_13{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b B1_GPIO_Port}\~ GPIOC{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b USART_TX_Pin}\~ GPIO_PIN_2{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b USART_TX_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b USART_RX_Pin}\~ GPIO_PIN_3{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b USART_RX_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LD2_Pin}\~ GPIO_PIN_5{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b LD2_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TMS_Pin}\~ GPIO_PIN_13{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TMS_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TCK_Pin}\~ GPIO_PIN_14{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TCK_GPIO_Port}\~ GPIOA{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b SWO_Pin}\~ GPIO_PIN_3{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b SWO_GPIO_Port}\~ GPIOB{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains all the function prototypes for the gpio.c file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_gpio_cfg.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio_cfg.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_gpio_cfg.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
21 {\cf21 #ifndef __DEV_GPIO_CFG_H__}\par
22 {\cf21 #define __DEV_GPIO_CFG_H__}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25 {\cf17 extern} {\cf22 "C"} \{\par
26 {\cf21 #endif}\par
27 \par
28 {\cf21 #define B1_Pin GPIO_PIN_13}\par
29 {\cf21 #define B1_GPIO_Port GPIOC}\par
30 {\cf21 #define USART_TX_Pin GPIO_PIN_2}\par
31 {\cf21 #define USART_TX_GPIO_Port GPIOA}\par
32 {\cf21 #define USART_RX_Pin GPIO_PIN_3}\par
33 {\cf21 #define USART_RX_GPIO_Port GPIOA}\par
34 {\cf21 #define LD2_Pin GPIO_PIN_5}\par
35 {\cf21 #define LD2_GPIO_Port GPIOA}\par
36 {\cf21 #define TMS_Pin GPIO_PIN_13}\par
37 {\cf21 #define TMS_GPIO_Port GPIOA}\par
38 {\cf21 #define TCK_Pin GPIO_PIN_14}\par
39 {\cf21 #define TCK_GPIO_Port GPIOA}\par
40 {\cf21 #define SWO_Pin GPIO_PIN_3}\par
41 {\cf21 #define SWO_GPIO_Port GPIOB}\par
42 \par
43 {\cf21 #ifdef __cplusplus}\par
44 \}\par
45 {\cf21 #endif}\par
46 {\cf21 #endif }{\cf20 /*__ DEV_GPIO_CFG_H__ */}{\cf21 }\par
47 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_i2cm.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_i2cm.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_i2cm.h}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capa de I2C Master (HAL) para STM32. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include <stdint.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_TIMEOUT}\~ (5000)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_InitStart} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa I2C1 a 400 kHz, 7-bit, sin dual address. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_DeInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa I2C1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Write} (uint8_t address, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un buffer en un esclavo I\'B2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Read} (uint8_t address, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un buffer crudo desde un esclavo I\'B2C (no lee direcci\'F3n interna). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Read_Sr} (uint8_t address, uint8_t reg, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee bytes desde un registro interno. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_IsDeviceReady} (uint8_t address, uint32_t trials)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica si un esclavo responde (ACK) en la direcci\'F3n dada. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capa de I2C Master (HAL) para STM32. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
> Matias D. < \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Fecha\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2025\par
}}Contiene operaciones I\'B2C Master del proyecto.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Nota\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
La direcci\'F3n del esclavo se pasa en 7-bit (p.ej. 0x68) y la capa hace (addr<<1).\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Timeout por defecto: I2C_TIMEOUT (ms). \par}
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_i2cm.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_i2cm.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_i2cm.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
14 \par
15 {\cf21 #ifndef DEV_I2CM_H}\par
16 {\cf21 #define DEV_I2CM_H}\par
17 \par
18 {\cf21 #include "stm32f4xx_hal.h"}\par
19 {\cf21 #include <stdint.h>}\par
20 \par
21 {\cf21 #ifdef __cplusplus}\par
22 {\cf17 extern} {\cf22 "C"} \{\par
23 {\cf21 #endif}\par
24 \par
29 \par
30 {\cf21 #ifndef I2C_TIMEOUT}{\cf21 }\par
32 {\cf21 #define I2C_TIMEOUT           (5000)}\par
33 {\cf21 #endif}\par
34 \par
39 HAL_StatusTypeDef I2CM_InitStart({\cf18 void});\par
40 \par
45 HAL_StatusTypeDef I2CM_DeInit({\cf18 void});\par
46 \par
54 HAL_StatusTypeDef I2CM_Write(uint8_t address, uint8_t *data, uint16_t size);\par
55 \par
63 HAL_StatusTypeDef I2CM_Read(uint8_t address, uint8_t *data, uint16_t size);\par
64 \par
73 HAL_StatusTypeDef I2CM_Read_Sr(uint8_t address, uint8_t reg, uint8_t *data, uint16_t size);\par
74 \par
81 HAL_StatusTypeDef I2CM_IsDeviceReady(uint8_t address, uint32_t trials);\par
82  {\cf20 // end group DEV_I2CM}\par
84 \par
85 {\cf21 #ifdef __cplusplus}\par
86 \}\par
87 {\cf21 #endif}\par
88 \par
89 {\cf21 #endif }{\cf20 /* DEV_I2CM_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_uart.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_uart.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_uart.h}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains all the function prototypes for the usart.c file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdio.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_TIMEOUT_MS}\~ 2000{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_TX_MAX_SIZE}\~ 512{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b uartInit} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa la UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b uartDeInit} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa la UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uartSendString} (uint8_t *pstring)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cadena de bytes por UART finalizada en '\\0'. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uartSendStringSize} (uint8_t *pstring, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cantidad espec\'EDfica de bytes por UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uartReceiveStringSize} (uint8_t *pstring, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recibe una cantidad de bytes por UART. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains all the function prototypes for the usart.c file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v uartDeInit\:dev_uart.h}
{\xe \v dev_uart.h\:uartDeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool uartDeInit ()}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa la UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si se finalizo correctamente, false si hubo alg\'FAn problema. \par
}}}}
{\xe \v uartInit\:dev_uart.h}
{\xe \v dev_uart.h\:uartInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool uartInit ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa la UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si se inicializ\'F3 bien, false si hubo alg\'FAn problema en la configuracion. \par
}}}}
{\xe \v uartReceiveStringSize\:dev_uart.h}
{\xe \v dev_uart.h\:uartReceiveStringSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uartReceiveStringSize (uint8_t * pstring, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recibe una cantidad de bytes por UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pstring} \cell }{Puntero al buffer donde se guardar\'E1n los datos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Cantidad de bytes a recibir. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}
{\xe \v uartSendString\:dev_uart.h}
{\xe \v dev_uart.h\:uartSendString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uartSendString (uint8_t * pstring)}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cadena de bytes por UART finalizada en '\\0'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pstring} \cell }{Puntero a la cadena a enviar. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}
{\xe \v uartSendStringSize\:dev_uart.h}
{\xe \v dev_uart.h\:uartSendStringSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uartSendStringSize (uint8_t * pstring, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cantidad espec\'EDfica de bytes por UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pstring} \cell }{Puntero al buffer de datos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Cantidad de bytes a enviar. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_uart.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_uart.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_uart.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
21 {\cf21 #ifndef __DEV_UART_H__}\par
22 {\cf21 #define __DEV_UART_H__}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25 {\cf17 extern} {\cf22 "C"} \{\par
26 {\cf21 #endif}\par
27 \par
28 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
29 {\cf21 #include "stm32f4xx_hal.h"}\par
30 {\cf21 #include <stdbool.h>}\par
31 {\cf21 #include <string.h>}\par
32 {\cf21 #include <stdio.h>}\par
33 \par
34 {\cf20 // Tiempo m\'E1ximo de espera para operaciones UART}\par
35 {\cf21 #define UART_TIMEOUT_MS 2000}\par
36 \par
37 {\cf20 // Tama\'F1o m\'E1ximo del buffer para enviar datos por UART}\par
38 {\cf21 #define UART_TX_MAX_SIZE 512}\par
39 \par
40 \par
41 {\cf20 /* Funciones p\'FAblicas --------------------------------------------------------*/}\par
46 {\cf18 bool} uartInit();\par
47 \par
52 {\cf18 bool} uartDeInit();\par
53 \par
59 {\cf18 void} uartSendString(uint8_t * pstring);\par
60 \par
67 {\cf18 void} uartSendStringSize(uint8_t * pstring, uint16_t size);\par
68 \par
75 {\cf18 void} uartReceiveStringSize(uint8_t * pstring, uint16_t size);\par
76 \par
77 \par
78 {\cf21 #ifdef __cplusplus}\par
79 \}\par
80 {\cf21 #endif}\par
81 \par
82 {\cf21 #endif }{\cf20 /* __DEV_UART_H__ */}{\cf21 }\par
83 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dev_usart.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_usart.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/dev/dev_usart.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
21 {\cf21 #ifndef __USART_H__}\par
22 {\cf21 #define __USART_H__}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25 {\cf17 extern} {\cf22 "C"} \{\par
26 {\cf21 #endif}\par
27 \par
28 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
29 {\cf21 #include "dev_gpio_cfg.h"}\par
30 {\cf21 #include "stm32f4xx_hal.h"}\par
31 \par
32 {\cf20 /* USER CODE BEGIN Includes */}\par
33 \par
34 {\cf20 /* USER CODE END Includes */}\par
35 \par
36 {\cf17 extern} UART_HandleTypeDef huart2;\par
37 \par
38 {\cf20 /* USER CODE BEGIN Private defines */}\par
39 \par
40 {\cf20 /* USER CODE END Private defines */}\par
41 \par
42 {\cf18 void} MX_USART2_UART_Init({\cf18 void});\par
43 \par
44 {\cf20 /* USER CODE BEGIN Prototypes */}\par
45 \par
46 {\cf20 /* USER CODE END Prototypes */}\par
47 \par
48 {\cf21 #ifdef __cplusplus}\par
49 \}\par
50 {\cf21 #endif}\par
51 \par
52 {\cf21 #endif }{\cf20 /* __USART_H__ */}{\cf21 }\par
53 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FreeRTOSConfig.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/FreeRTOSConfig.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/FreeRTOSConfig.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
2 {\cf20 /*}\par
3 {\cf20  * FreeRTOS Kernel V10.3.1}\par
4 {\cf20  * Portion Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.}\par
5 {\cf20  * Portion Copyright (C) 2019 StMicroelectronics, Inc.  All Rights Reserved.}\par
6 {\cf20  *}\par
7 {\cf20  * Permission is hereby granted, free of charge, to any person obtaining a copy of}\par
8 {\cf20  * this software and associated documentation files (the "Software"), to deal in}\par
9 {\cf20  * the Software without restriction, including without limitation the rights to}\par
10 {\cf20  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of}\par
11 {\cf20  * the Software, and to permit persons to whom the Software is furnished to do so,}\par
12 {\cf20  * subject to the following conditions:}\par
13 {\cf20  *}\par
14 {\cf20  * The above copyright notice and this permission notice shall be included in all}\par
15 {\cf20  * copies or substantial portions of the Software.}\par
16 {\cf20  *}\par
17 {\cf20  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR}\par
18 {\cf20  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS}\par
19 {\cf20  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR}\par
20 {\cf20  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER}\par
21 {\cf20  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN}\par
22 {\cf20  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.}\par
23 {\cf20  *}\par
24 {\cf20  * http://www.FreeRTOS.org}\par
25 {\cf20  * http://aws.amazon.com/freertos}\par
26 {\cf20  *}\par
27 {\cf20  * 1 tab == 4 spaces!}\par
28 {\cf20  */}\par
29 {\cf20 /* USER CODE END Header */}\par
30 \par
31 {\cf21 #ifndef FREERTOS_CONFIG_H}\par
32 {\cf21 #define FREERTOS_CONFIG_H}\par
33 \par
34 {\cf20 /*-----------------------------------------------------------}\par
35 {\cf20  * Application specific definitions.}\par
36 {\cf20  *}\par
37 {\cf20  * These definitions should be adjusted for your particular hardware and}\par
38 {\cf20  * application requirements.}\par
39 {\cf20  *}\par
40 {\cf20  * These parameters and more are described within the 'configuration' section of the}\par
41 {\cf20  * FreeRTOS API documentation available on the FreeRTOS.org web site.}\par
42 {\cf20  *}\par
43 {\cf20  * See http://www.freertos.org/a00110.html}\par
44 {\cf20  *----------------------------------------------------------*/}\par
45 \par
46 {\cf20 /* USER CODE BEGIN Includes */}\par
47 {\cf20 /* Section where include file can be added */}\par
48 {\cf20 /* USER CODE END Includes */}\par
49 \par
50 {\cf20 /* Ensure definitions are only used by the compiler, and not by the assembler. */}\par
51 {\cf21 #if defined(__ICCARM__) || defined(__CC_ARM) || defined(__GNUC__)}\par
52 {\cf21   #include <stdint.h>}\par
53   {\cf17 extern} uint32_t SystemCoreClock;\par
54 {\cf21 #endif}\par
55 {\cf21 #ifndef CMSIS_device_header}\par
56 {\cf21 #define CMSIS_device_header "stm32f4xx.h"}\par
57 {\cf21 #endif }{\cf20 /* CMSIS_device_header */}{\cf21 }\par
58 \par
59 {\cf21 #define configENABLE_FPU                         0}\par
60 {\cf21 #define configENABLE_MPU                         0}\par
61 \par
62 {\cf21 #define configUSE_PREEMPTION                     1}\par
63 {\cf21 #define configSUPPORT_STATIC_ALLOCATION          1}\par
64 {\cf21 #define configSUPPORT_DYNAMIC_ALLOCATION         1}\par
65 {\cf21 #define configUSE_IDLE_HOOK                      0}\par
66 {\cf21 #define configUSE_TICK_HOOK                      0}\par
67 {\cf21 #define configCPU_CLOCK_HZ                       ( SystemCoreClock )}\par
68 {\cf21 #define configTICK_RATE_HZ                       ((TickType_t)1000)}\par
69 {\cf21 #define configMAX_PRIORITIES                     ( 56 )}\par
70 {\cf21 #define configMINIMAL_STACK_SIZE                 ((uint16_t)128)}\par
71 {\cf21 #define configTOTAL_HEAP_SIZE                    ((size_t)15360)}\par
72 {\cf21 #define configMAX_TASK_NAME_LEN                  ( 16 )}\par
73 {\cf21 #define configUSE_TRACE_FACILITY                 1}\par
74 {\cf21 #define configUSE_16_BIT_TICKS                   0}\par
75 {\cf21 #define configUSE_MUTEXES                        1}\par
76 {\cf21 #define configQUEUE_REGISTRY_SIZE                8}\par
77 {\cf21 #define configCHECK_FOR_STACK_OVERFLOW           2}\par
78 {\cf21 #define configUSE_RECURSIVE_MUTEXES              1}\par
79 {\cf21 #define configUSE_MALLOC_FAILED_HOOK             1}\par
80 {\cf21 #define configUSE_COUNTING_SEMAPHORES            1}\par
81 {\cf21 #define configUSE_PORT_OPTIMISED_TASK_SELECTION  0}\par
82 {\cf20 /* USER CODE BEGIN MESSAGE_BUFFER_LENGTH_TYPE */}\par
83 {\cf20 /* Defaults to size_t for backward compatibility, but can be changed}\par
84 {\cf20    if lengths will always be less than the number of bytes in a size_t. */}\par
85 {\cf21 #define configMESSAGE_BUFFER_LENGTH_TYPE         size_t}\par
86 {\cf20 /* USER CODE END MESSAGE_BUFFER_LENGTH_TYPE */}\par
87 \par
88 {\cf20 /* Co-routine definitions. */}\par
89 {\cf21 #define configUSE_CO_ROUTINES                    0}\par
90 {\cf21 #define configMAX_CO_ROUTINE_PRIORITIES          ( 2 )}\par
91 \par
92 {\cf20 /* Software timer definitions. */}\par
93 {\cf21 #define configUSE_TIMERS                         1}\par
94 {\cf21 #define configTIMER_TASK_PRIORITY                ( 2 )}\par
95 {\cf21 #define configTIMER_QUEUE_LENGTH                 10}\par
96 {\cf21 #define configTIMER_TASK_STACK_DEPTH             256}\par
97 \par
98 {\cf20 /* The following flag must be enabled only when using newlib */}\par
99 {\cf21 #define configUSE_NEWLIB_REENTRANT          1}\par
100 \par
101 {\cf20 /* CMSIS-RTOS V2 flags */}\par
102 {\cf21 #define configUSE_OS2_THREAD_SUSPEND_RESUME  1}\par
103 {\cf21 #define configUSE_OS2_THREAD_ENUMERATE       1}\par
104 {\cf21 #define configUSE_OS2_EVENTFLAGS_FROM_ISR    1}\par
105 {\cf21 #define configUSE_OS2_THREAD_FLAGS           1}\par
106 {\cf21 #define configUSE_OS2_TIMER                  1}\par
107 {\cf21 #define configUSE_OS2_MUTEX                  1}\par
108 \par
109 {\cf20 /* Set the following definitions to 1 to include the API function, or zero}\par
110 {\cf20 to exclude the API function. */}\par
111 {\cf21 #define INCLUDE_vTaskPrioritySet             1}\par
112 {\cf21 #define INCLUDE_uxTaskPriorityGet            1}\par
113 {\cf21 #define INCLUDE_vTaskDelete                  1}\par
114 {\cf21 #define INCLUDE_vTaskCleanUpResources        0}\par
115 {\cf21 #define INCLUDE_vTaskSuspend                 1}\par
116 {\cf21 #define INCLUDE_vTaskDelayUntil              1}\par
117 {\cf21 #define INCLUDE_vTaskDelay                   1}\par
118 {\cf21 #define INCLUDE_xTaskGetSchedulerState       1}\par
119 {\cf21 #define INCLUDE_xEventGroupSetBitFromISR     1}\par
120 {\cf21 #define INCLUDE_xTimerPendFunctionCall       1}\par
121 {\cf21 #define INCLUDE_xQueueGetMutexHolder         1}\par
122 {\cf21 #define INCLUDE_uxTaskGetStackHighWaterMark  1}\par
123 {\cf21 #define INCLUDE_xTaskGetCurrentTaskHandle    1}\par
124 {\cf21 #define INCLUDE_eTaskGetState                1}\par
125 \par
126 {\cf20 /*}\par
127 {\cf20  * The CMSIS-RTOS V2 FreeRTOS wrapper is dependent on the heap implementation used}\par
128 {\cf20  * by the application thus the correct define need to be enabled below}\par
129 {\cf20  */}\par
130 {\cf21 #define USE_FreeRTOS_HEAP_4}\par
131 \par
132 {\cf20 /* Cortex-M specific definitions. */}\par
133 {\cf21 #ifdef __NVIC_PRIO_BITS}\par
134  {\cf20 /* __BVIC_PRIO_BITS will be specified when CMSIS is being used. */}\par
135 {\cf21  #define configPRIO_BITS         __NVIC_PRIO_BITS}\par
136 {\cf21 #else}\par
137 {\cf21  #define configPRIO_BITS         4}\par
138 {\cf21 #endif}\par
139 \par
140 {\cf20 /* The lowest interrupt priority that can be used in a call to a "set priority"}\par
141 {\cf20 function. */}\par
142 {\cf21 #define configLIBRARY_LOWEST_INTERRUPT_PRIORITY   15}\par
143 \par
144 {\cf20 /* The highest interrupt priority that can be used by any interrupt service}\par
145 {\cf20 routine that makes calls to interrupt safe FreeRTOS API functions.  DO NOT CALL}\par
146 {\cf20 INTERRUPT SAFE FREERTOS API FUNCTIONS FROM ANY INTERRUPT THAT HAS A HIGHER}\par
147 {\cf20 PRIORITY THAN THIS! (higher priorities are lower numeric values. */}\par
148 {\cf21 #define configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY 5}\par
149 \par
150 {\cf20 /* Interrupt priorities used by the kernel port layer itself.  These are generic}\par
151 {\cf20 to all Cortex-M ports, and do not rely on any particular library functions. */}\par
152 {\cf21 #define configKERNEL_INTERRUPT_PRIORITY         ( configLIBRARY_LOWEST_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )}\par
153 {\cf20 /* !!!! configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to zero !!!!}\par
154 {\cf20 See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html. */}\par
155 {\cf21 #define configMAX_SYSCALL_INTERRUPT_PRIORITY    ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )}\par
156 \par
157 {\cf20 /* Normal assert() semantics without relying on the provision of an assert.h}\par
158 {\cf20 header file. */}\par
159 {\cf20 /* USER CODE BEGIN 1 */}\par
160 {\cf21 #define configASSERT( x ) if ((x) == 0) \{taskDISABLE_INTERRUPTS(); for( ;; );\}}\par
161 {\cf20 /* USER CODE END 1 */}\par
162 \par
163 {\cf20 /* Definitions that map the FreeRTOS port interrupt handlers to their CMSIS}\par
164 {\cf20 standard names. */}\par
165 {\cf21 #define vPortSVCHandler    SVC_Handler}\par
166 {\cf21 #define xPortPendSVHandler PendSV_Handler}\par
167 \par
168 {\cf20 /* IMPORTANT: After 10.3.1 update, Systick_Handler comes from NVIC (if SYS timebase = systick), otherwise from cmsis_os2.c */}\par
169 \par
170 {\cf21 #define USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION 0}\par
171 \par
172 {\cf20 /* USER CODE BEGIN Defines */}\par
173 {\cf20 /* Section where parameter definitions can be added (for instance, to override default ones in FreeRTOS.h) */}\par
174 {\cf20 /* USER CODE END Defines */}\par
175 \par
176 {\cf21 #endif }{\cf20 /* FREERTOS_CONFIG_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/main.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/main.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/main.h}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for {\b main.c} file. This file contains the common defines of the application. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "cmsis_os.h"}\par
{\f2 #include "dev_i2cs_api.h"}\par
{\f2 #include "dev_i2cm.h"}\par
{\f2 #include "dev_usart.h"}\par
{\f2 #include "dev_gpio.h"}\par
{\f2 #include "sys_dbg_api.h"}\par
{\f2 #include "dev_uart.h"}\par
{\f2 #include "sys_sm.h"}\par
{\f2 #include <stdbool.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Error_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Header for {\b main.c} file. This file contains the common defines of the application. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v Error_Handler\:main.h}
{\xe \v main.h\:Error_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Error_Handler (void )}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/main.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/main.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
19 {\cf20 /* USER CODE END Header */}\par
20 \par
21 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
22 {\cf21 #ifndef __MAIN_H}\par
23 {\cf21 #define __MAIN_H}\par
24 \par
25 {\cf21 #ifdef __cplusplus}\par
26 {\cf17 extern} {\cf22 "C"} \{\par
27 {\cf21 #endif}\par
28 \par
29 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
30 {\cf21 #include "stm32f4xx_hal.h"}\par
31 {\cf21 #include "cmsis_os.h"}\par
32 {\cf21 #include "dev_i2cs_api.h"}\par
33 {\cf21 #include "dev_i2cm.h"}\par
34 {\cf21 #include "dev_usart.h"}\par
35 {\cf21 #include "dev_gpio.h"}\par
36 {\cf21 #include "sys_dbg_api.h"}\par
37 {\cf21 #include "dev_uart.h"}\par
38 {\cf21 #include "sys_sm.h"}\par
39 {\cf21 #include <stdbool.h>}\par
40 \par
41 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
42 {\cf20 /* USER CODE BEGIN Includes */}\par
43 \par
44 {\cf20 /* USER CODE END Includes */}\par
45 \par
46 {\cf20 /* Exported types ------------------------------------------------------------*/}\par
47 {\cf20 /* USER CODE BEGIN ET */}\par
48 \par
49 {\cf20 /* USER CODE END ET */}\par
50 \par
51 {\cf20 /* Exported constants --------------------------------------------------------*/}\par
52 {\cf20 /* USER CODE BEGIN EC */}\par
53 \par
54 {\cf20 /* USER CODE END EC */}\par
55 \par
56 {\cf20 /* Exported macro ------------------------------------------------------------*/}\par
57 {\cf20 /* USER CODE BEGIN EM */}\par
58 \par
59 {\cf20 /* USER CODE END EM */}\par
60 \par
61 {\cf20 /* Exported functions prototypes ---------------------------------------------*/}\par
62 {\cf18 void} Error_Handler({\cf18 void});\par
63 \par
64 {\cf20 /* USER CODE BEGIN EFP */}\par
65 \par
66 {\cf20 /* USER CODE END EFP */}\par
67 \par
68 {\cf20 /* Private defines -----------------------------------------------------------*/}\par
69 \par
70 {\cf20 /* USER CODE BEGIN Private defines */}\par
71 \par
72 {\cf20 /* USER CODE END Private defines */}\par
73 \par
74 {\cf21 #ifdef __cplusplus}\par
75 \}\par
76 {\cf21 #endif}\par
77 \par
78 {\cf21 #endif }{\cf20 /* __MAIN_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f4xx_hal_conf.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_hal_conf.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_hal_conf.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
21 {\cf20 /* USER CODE END Header */}\par
22 \par
23 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
24 {\cf21 #ifndef __STM32F4xx_HAL_CONF_H}\par
25 {\cf21 #define __STM32F4xx_HAL_CONF_H}\par
26 \par
27 {\cf21 #ifdef __cplusplus}\par
28  {\cf17 extern} {\cf22 "C"} \{\par
29 {\cf21 #endif}\par
30 \par
31 {\cf20 /* Exported types ------------------------------------------------------------*/}\par
32 {\cf20 /* Exported constants --------------------------------------------------------*/}\par
33 \par
34 {\cf20 /* ########################## Module Selection ############################## */}\par
38 {\cf21 #define HAL_MODULE_ENABLED}\par
39 \par
40   {\cf20 /* #define HAL_CRYP_MODULE_ENABLED */}\par
41 {\cf20 /* #define HAL_ADC_MODULE_ENABLED */}\par
42 {\cf20 /* #define HAL_CAN_MODULE_ENABLED */}\par
43 {\cf20 /* #define HAL_CRC_MODULE_ENABLED */}\par
44 {\cf20 /* #define HAL_CAN_LEGACY_MODULE_ENABLED */}\par
45 {\cf20 /* #define HAL_DAC_MODULE_ENABLED */}\par
46 {\cf20 /* #define HAL_DCMI_MODULE_ENABLED */}\par
47 {\cf20 /* #define HAL_DMA2D_MODULE_ENABLED */}\par
48 {\cf20 /* #define HAL_ETH_MODULE_ENABLED */}\par
49 {\cf20 /* #define HAL_ETH_LEGACY_MODULE_ENABLED */}\par
50 {\cf20 /* #define HAL_NAND_MODULE_ENABLED */}\par
51 {\cf20 /* #define HAL_NOR_MODULE_ENABLED */}\par
52 {\cf20 /* #define HAL_PCCARD_MODULE_ENABLED */}\par
53 {\cf20 /* #define HAL_SRAM_MODULE_ENABLED */}\par
54 {\cf20 /* #define HAL_SDRAM_MODULE_ENABLED */}\par
55 {\cf20 /* #define HAL_HASH_MODULE_ENABLED */}\par
56 {\cf21 #define HAL_I2C_MODULE_ENABLED}\par
57 {\cf20 /* #define HAL_I2S_MODULE_ENABLED */}\par
58 {\cf20 /* #define HAL_IWDG_MODULE_ENABLED */}\par
59 {\cf20 /* #define HAL_LTDC_MODULE_ENABLED */}\par
60 {\cf20 /* #define HAL_RNG_MODULE_ENABLED */}\par
61 {\cf20 /* #define HAL_RTC_MODULE_ENABLED */}\par
62 {\cf20 /* #define HAL_SAI_MODULE_ENABLED */}\par
63 {\cf20 /* #define HAL_SD_MODULE_ENABLED */}\par
64 {\cf20 /* #define HAL_MMC_MODULE_ENABLED */}\par
65 {\cf20 /* #define HAL_SPI_MODULE_ENABLED */}\par
66 {\cf21 #define HAL_TIM_MODULE_ENABLED}\par
67 {\cf21 #define HAL_UART_MODULE_ENABLED}\par
68 {\cf20 /* #define HAL_USART_MODULE_ENABLED */}\par
69 {\cf20 /* #define HAL_IRDA_MODULE_ENABLED */}\par
70 {\cf20 /* #define HAL_SMARTCARD_MODULE_ENABLED */}\par
71 {\cf20 /* #define HAL_SMBUS_MODULE_ENABLED */}\par
72 {\cf20 /* #define HAL_WWDG_MODULE_ENABLED */}\par
73 {\cf20 /* #define HAL_PCD_MODULE_ENABLED */}\par
74 {\cf20 /* #define HAL_HCD_MODULE_ENABLED */}\par
75 {\cf20 /* #define HAL_DSI_MODULE_ENABLED */}\par
76 {\cf20 /* #define HAL_QSPI_MODULE_ENABLED */}\par
77 {\cf20 /* #define HAL_QSPI_MODULE_ENABLED */}\par
78 {\cf20 /* #define HAL_CEC_MODULE_ENABLED */}\par
79 {\cf20 /* #define HAL_FMPI2C_MODULE_ENABLED */}\par
80 {\cf20 /* #define HAL_FMPSMBUS_MODULE_ENABLED */}\par
81 {\cf20 /* #define HAL_SPDIFRX_MODULE_ENABLED */}\par
82 {\cf20 /* #define HAL_DFSDM_MODULE_ENABLED */}\par
83 {\cf20 /* #define HAL_LPTIM_MODULE_ENABLED */}\par
84 {\cf21 #define HAL_GPIO_MODULE_ENABLED}\par
85 {\cf21 #define HAL_EXTI_MODULE_ENABLED}\par
86 {\cf21 #define HAL_DMA_MODULE_ENABLED}\par
87 {\cf21 #define HAL_RCC_MODULE_ENABLED}\par
88 {\cf21 #define HAL_FLASH_MODULE_ENABLED}\par
89 {\cf21 #define HAL_PWR_MODULE_ENABLED}\par
90 {\cf21 #define HAL_CORTEX_MODULE_ENABLED}\par
91 \par
92 {\cf20 /* ########################## HSE/HSI Values adaptation ##################### */}\par
98 {\cf21 #if !defined  (HSE_VALUE)}\par
99 {\cf21   #define HSE_VALUE    8000000U }{\cf21 }\par
100 {\cf21 #endif }{\cf20 /* HSE_VALUE */}{\cf21 }\par
101 \par
102 {\cf21 #if !defined  (HSE_STARTUP_TIMEOUT)}\par
103 {\cf21   #define HSE_STARTUP_TIMEOUT    100U   }{\cf21 }\par
104 {\cf21 #endif }{\cf20 /* HSE_STARTUP_TIMEOUT */}{\cf21 }\par
105 \par
111 {\cf21 #if !defined  (HSI_VALUE)}\par
112 {\cf21   #define HSI_VALUE    ((uint32_t)16000000U) }{\cf21 }\par
113 {\cf21 #endif }{\cf20 /* HSI_VALUE */}{\cf21 }\par
114 \par
118 {\cf21 #if !defined  (LSI_VALUE)}\par
119 {\cf21  #define LSI_VALUE  32000U       }{\cf21 }\par
120 {\cf21 #endif }{\cf20 /* LSI_VALUE */}{\cf21                       }{\cf21 }{\cf21 }\par
126 {\cf21 #if !defined  (LSE_VALUE)}\par
127 {\cf21  #define LSE_VALUE  32768U    }{\cf21 }\par
128 {\cf21 #endif }{\cf20 /* LSE_VALUE */}{\cf21 }\par
129 \par
130 {\cf21 #if !defined  (LSE_STARTUP_TIMEOUT)}\par
131 {\cf21   #define LSE_STARTUP_TIMEOUT    5000U   }{\cf21 }\par
132 {\cf21 #endif }{\cf20 /* LSE_STARTUP_TIMEOUT */}{\cf21 }\par
133 \par
139 {\cf21 #if !defined  (EXTERNAL_CLOCK_VALUE)}\par
140 {\cf21   #define EXTERNAL_CLOCK_VALUE    12288000U }{\cf21 }\par
141 {\cf21 #endif }{\cf20 /* EXTERNAL_CLOCK_VALUE */}{\cf21 }\par
142 \par
143 {\cf20 /* Tip: To avoid modifying this file each time you need to use different HSE,}\par
144 {\cf20    ===  you can define the HSE value in your toolchain compiler preprocessor. */}\par
145 \par
146 {\cf20 /* ########################### System Configuration ######################### */}\par
150 {\cf21 #define  VDD_VALUE            3300U }{\cf21 }\par
151 {\cf21 #define  TICK_INT_PRIORITY            15U   }{\cf21 }\par
152 {\cf21 #define  USE_RTOS                     0U}\par
153 {\cf21 #define  PREFETCH_ENABLE              1U}\par
154 {\cf21 #define  INSTRUCTION_CACHE_ENABLE     1U}\par
155 {\cf21 #define  DATA_CACHE_ENABLE            1U}\par
156 \par
157 {\cf21 #define  USE_HAL_ADC_REGISTER_CALLBACKS         0U }{\cf20 /* ADC register callback disabled       */}{\cf21 }\par
158 {\cf21 #define  USE_HAL_CAN_REGISTER_CALLBACKS         0U }{\cf20 /* CAN register callback disabled       */}{\cf21 }\par
159 {\cf21 #define  USE_HAL_CEC_REGISTER_CALLBACKS         0U }{\cf20 /* CEC register callback disabled       */}{\cf21 }\par
160 {\cf21 #define  USE_HAL_CRYP_REGISTER_CALLBACKS        0U }{\cf20 /* CRYP register callback disabled      */}{\cf21 }\par
161 {\cf21 #define  USE_HAL_DAC_REGISTER_CALLBACKS         0U }{\cf20 /* DAC register callback disabled       */}{\cf21 }\par
162 {\cf21 #define  USE_HAL_DCMI_REGISTER_CALLBACKS        0U }{\cf20 /* DCMI register callback disabled      */}{\cf21 }\par
163 {\cf21 #define  USE_HAL_DFSDM_REGISTER_CALLBACKS       0U }{\cf20 /* DFSDM register callback disabled     */}{\cf21 }\par
164 {\cf21 #define  USE_HAL_DMA2D_REGISTER_CALLBACKS       0U }{\cf20 /* DMA2D register callback disabled     */}{\cf21 }\par
165 {\cf21 #define  USE_HAL_DSI_REGISTER_CALLBACKS         0U }{\cf20 /* DSI register callback disabled       */}{\cf21 }\par
166 {\cf21 #define  USE_HAL_ETH_REGISTER_CALLBACKS         0U }{\cf20 /* ETH register callback disabled       */}{\cf21 }\par
167 {\cf21 #define  USE_HAL_HASH_REGISTER_CALLBACKS        0U }{\cf20 /* HASH register callback disabled      */}{\cf21 }\par
168 {\cf21 #define  USE_HAL_HCD_REGISTER_CALLBACKS         0U }{\cf20 /* HCD register callback disabled       */}{\cf21 }\par
169 {\cf21 #define  USE_HAL_I2C_REGISTER_CALLBACKS         0U }{\cf20 /* I2C register callback disabled       */}{\cf21 }\par
170 {\cf21 #define  USE_HAL_FMPI2C_REGISTER_CALLBACKS      0U }{\cf20 /* FMPI2C register callback disabled    */}{\cf21 }\par
171 {\cf21 #define  USE_HAL_FMPSMBUS_REGISTER_CALLBACKS    0U }{\cf20 /* FMPSMBUS register callback disabled  */}{\cf21 }\par
172 {\cf21 #define  USE_HAL_I2S_REGISTER_CALLBACKS         0U }{\cf20 /* I2S register callback disabled       */}{\cf21 }\par
173 {\cf21 #define  USE_HAL_IRDA_REGISTER_CALLBACKS        0U }{\cf20 /* IRDA register callback disabled      */}{\cf21 }\par
174 {\cf21 #define  USE_HAL_LPTIM_REGISTER_CALLBACKS       0U }{\cf20 /* LPTIM register callback disabled     */}{\cf21 }\par
175 {\cf21 #define  USE_HAL_LTDC_REGISTER_CALLBACKS        0U }{\cf20 /* LTDC register callback disabled      */}{\cf21 }\par
176 {\cf21 #define  USE_HAL_MMC_REGISTER_CALLBACKS         0U }{\cf20 /* MMC register callback disabled       */}{\cf21 }\par
177 {\cf21 #define  USE_HAL_NAND_REGISTER_CALLBACKS        0U }{\cf20 /* NAND register callback disabled      */}{\cf21 }\par
178 {\cf21 #define  USE_HAL_NOR_REGISTER_CALLBACKS         0U }{\cf20 /* NOR register callback disabled       */}{\cf21 }\par
179 {\cf21 #define  USE_HAL_PCCARD_REGISTER_CALLBACKS      0U }{\cf20 /* PCCARD register callback disabled    */}{\cf21 }\par
180 {\cf21 #define  USE_HAL_PCD_REGISTER_CALLBACKS         0U }{\cf20 /* PCD register callback disabled       */}{\cf21 }\par
181 {\cf21 #define  USE_HAL_QSPI_REGISTER_CALLBACKS        0U }{\cf20 /* QSPI register callback disabled      */}{\cf21 }\par
182 {\cf21 #define  USE_HAL_RNG_REGISTER_CALLBACKS         0U }{\cf20 /* RNG register callback disabled       */}{\cf21 }\par
183 {\cf21 #define  USE_HAL_RTC_REGISTER_CALLBACKS         0U }{\cf20 /* RTC register callback disabled       */}{\cf21 }\par
184 {\cf21 #define  USE_HAL_SAI_REGISTER_CALLBACKS         0U }{\cf20 /* SAI register callback disabled       */}{\cf21 }\par
185 {\cf21 #define  USE_HAL_SD_REGISTER_CALLBACKS          0U }{\cf20 /* SD register callback disabled        */}{\cf21 }\par
186 {\cf21 #define  USE_HAL_SMARTCARD_REGISTER_CALLBACKS   0U }{\cf20 /* SMARTCARD register callback disabled */}{\cf21 }\par
187 {\cf21 #define  USE_HAL_SDRAM_REGISTER_CALLBACKS       0U }{\cf20 /* SDRAM register callback disabled     */}{\cf21 }\par
188 {\cf21 #define  USE_HAL_SRAM_REGISTER_CALLBACKS        0U }{\cf20 /* SRAM register callback disabled      */}{\cf21 }\par
189 {\cf21 #define  USE_HAL_SPDIFRX_REGISTER_CALLBACKS     0U }{\cf20 /* SPDIFRX register callback disabled   */}{\cf21 }\par
190 {\cf21 #define  USE_HAL_SMBUS_REGISTER_CALLBACKS       0U }{\cf20 /* SMBUS register callback disabled     */}{\cf21 }\par
191 {\cf21 #define  USE_HAL_SPI_REGISTER_CALLBACKS         0U }{\cf20 /* SPI register callback disabled       */}{\cf21 }\par
192 {\cf21 #define  USE_HAL_TIM_REGISTER_CALLBACKS         0U }{\cf20 /* TIM register callback disabled       */}{\cf21 }\par
193 {\cf21 #define  USE_HAL_UART_REGISTER_CALLBACKS        0U }{\cf20 /* UART register callback disabled      */}{\cf21 }\par
194 {\cf21 #define  USE_HAL_USART_REGISTER_CALLBACKS       0U }{\cf20 /* USART register callback disabled     */}{\cf21 }\par
195 {\cf21 #define  USE_HAL_WWDG_REGISTER_CALLBACKS        0U }{\cf20 /* WWDG register callback disabled      */}{\cf21 }\par
196 \par
197 {\cf20 /* ########################## Assert Selection ############################## */}\par
202 {\cf20 /* #define USE_FULL_ASSERT    1U */}\par
203 \par
204 {\cf20 /* ################## Ethernet peripheral configuration ##################### */}\par
205 \par
206 {\cf20 /* Section 1 : Ethernet peripheral configuration */}\par
207 \par
208 {\cf20 /* MAC ADDRESS: MAC_ADDR0:MAC_ADDR1:MAC_ADDR2:MAC_ADDR3:MAC_ADDR4:MAC_ADDR5 */}\par
209 {\cf21 #define MAC_ADDR0   2U}\par
210 {\cf21 #define MAC_ADDR1   0U}\par
211 {\cf21 #define MAC_ADDR2   0U}\par
212 {\cf21 #define MAC_ADDR3   0U}\par
213 {\cf21 #define MAC_ADDR4   0U}\par
214 {\cf21 #define MAC_ADDR5   0U}\par
215 \par
216 {\cf20 /* Definition of the Ethernet driver buffers size and count */}\par
217 {\cf21 #define ETH_RX_BUF_SIZE                ETH_MAX_PACKET_SIZE }{\cf20 /* buffer size for receive               */}{\cf21 }\par
218 {\cf21 #define ETH_TX_BUF_SIZE                ETH_MAX_PACKET_SIZE }{\cf20 /* buffer size for transmit              */}{\cf21 }\par
219 {\cf21 #define ETH_RXBUFNB                    4U       }{\cf20 /* 4 Rx buffers of size ETH_RX_BUF_SIZE  */}{\cf21 }\par
220 {\cf21 #define ETH_TXBUFNB                    4U       }{\cf20 /* 4 Tx buffers of size ETH_TX_BUF_SIZE  */}{\cf21 }\par
221 \par
222 {\cf20 /* Section 2: PHY configuration section */}\par
223 \par
224 {\cf20 /* DP83848_PHY_ADDRESS Address*/}\par
225 {\cf21 #define DP83848_PHY_ADDRESS}\par
226 {\cf20 /* PHY Reset delay these values are based on a 1 ms Systick interrupt*/}\par
227 {\cf21 #define PHY_RESET_DELAY                 0x000000FFU}\par
228 {\cf20 /* PHY Configuration delay */}\par
229 {\cf21 #define PHY_CONFIG_DELAY                0x00000FFFU}\par
230 \par
231 {\cf21 #define PHY_READ_TO                     0x0000FFFFU}\par
232 {\cf21 #define PHY_WRITE_TO                    0x0000FFFFU}\par
233 \par
234 {\cf20 /* Section 3: Common PHY Registers */}\par
235 \par
236 {\cf21 #define PHY_BCR                         ((uint16_t)0x0000U)    }{\cf21 }\par
237 {\cf21 #define PHY_BSR                         ((uint16_t)0x0001U)    }{\cf21 }\par
238 \par
239 {\cf21 #define PHY_RESET                       ((uint16_t)0x8000U)  }{\cf21 }\par
240 {\cf21 #define PHY_LOOPBACK                    ((uint16_t)0x4000U)  }{\cf21 }\par
241 {\cf21 #define PHY_FULLDUPLEX_100M             ((uint16_t)0x2100U)  }{\cf21 }\par
242 {\cf21 #define PHY_HALFDUPLEX_100M             ((uint16_t)0x2000U)  }{\cf21 }\par
243 {\cf21 #define PHY_FULLDUPLEX_10M              ((uint16_t)0x0100U)  }{\cf21 }\par
244 {\cf21 #define PHY_HALFDUPLEX_10M              ((uint16_t)0x0000U)  }{\cf21 }\par
245 {\cf21 #define PHY_AUTONEGOTIATION             ((uint16_t)0x1000U)  }{\cf21 }\par
246 {\cf21 #define PHY_RESTART_AUTONEGOTIATION     ((uint16_t)0x0200U)  }{\cf21 }\par
247 {\cf21 #define PHY_POWERDOWN                   ((uint16_t)0x0800U)  }{\cf21 }\par
248 {\cf21 #define PHY_ISOLATE                     ((uint16_t)0x0400U)  }{\cf21 }\par
249 \par
250 {\cf21 #define PHY_AUTONEGO_COMPLETE           ((uint16_t)0x0020U)  }{\cf21 }\par
251 {\cf21 #define PHY_LINKED_STATUS               ((uint16_t)0x0004U)  }{\cf21 }\par
252 {\cf21 #define PHY_JABBER_DETECTION            ((uint16_t)0x0002U)  }{\cf21 }\par
253 \par
254 {\cf20 /* Section 4: Extended PHY Registers */}\par
255 {\cf21 #define PHY_SR                          ((uint16_t))    }{\cf21 }\par
256 \par
257 {\cf21 #define PHY_SPEED_STATUS                ((uint16_t))  }{\cf21 }\par
258 {\cf21 #define PHY_DUPLEX_STATUS               ((uint16_t))  }{\cf21 }\par
259 \par
260 {\cf20 /* ################## SPI peripheral configuration ########################## */}\par
261 \par
262 {\cf20 /* CRC FEATURE: Use to activate CRC feature inside HAL SPI Driver}\par
263 {\cf20 * Activated: CRC code is present inside driver}\par
264 {\cf20 * Deactivated: CRC code cleaned from driver}\par
265 {\cf20 */}\par
266 \par
267 {\cf21 #define USE_SPI_CRC                     0U}\par
268 \par
269 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
273 \par
274 {\cf21 #ifdef HAL_RCC_MODULE_ENABLED}\par
275 {\cf21   #include "stm32f4xx_hal_rcc.h"}\par
276 {\cf21 #endif }{\cf20 /* HAL_RCC_MODULE_ENABLED */}{\cf21 }\par
277 \par
278 {\cf21 #ifdef HAL_GPIO_MODULE_ENABLED}\par
279 {\cf21   #include "stm32f4xx_hal_gpio.h"}\par
280 {\cf21 #endif }{\cf20 /* HAL_GPIO_MODULE_ENABLED */}{\cf21 }\par
281 \par
282 {\cf21 #ifdef HAL_EXTI_MODULE_ENABLED}\par
283 {\cf21   #include "stm32f4xx_hal_exti.h"}\par
284 {\cf21 #endif }{\cf20 /* HAL_EXTI_MODULE_ENABLED */}{\cf21 }\par
285 \par
286 {\cf21 #ifdef HAL_DMA_MODULE_ENABLED}\par
287 {\cf21   #include "stm32f4xx_hal_dma.h"}\par
288 {\cf21 #endif }{\cf20 /* HAL_DMA_MODULE_ENABLED */}{\cf21 }\par
289 \par
290 {\cf21 #ifdef HAL_CORTEX_MODULE_ENABLED}\par
291 {\cf21   #include "stm32f4xx_hal_cortex.h"}\par
292 {\cf21 #endif }{\cf20 /* HAL_CORTEX_MODULE_ENABLED */}{\cf21 }\par
293 \par
294 {\cf21 #ifdef HAL_ADC_MODULE_ENABLED}\par
295 {\cf21   #include "stm32f4xx_hal_adc.h"}\par
296 {\cf21 #endif }{\cf20 /* HAL_ADC_MODULE_ENABLED */}{\cf21 }\par
297 \par
298 {\cf21 #ifdef HAL_CAN_MODULE_ENABLED}\par
299 {\cf21   #include "stm32f4xx_hal_can.h"}\par
300 {\cf21 #endif }{\cf20 /* HAL_CAN_MODULE_ENABLED */}{\cf21 }\par
301 \par
302 {\cf21 #ifdef HAL_CAN_LEGACY_MODULE_ENABLED}\par
303 {\cf21   #include "stm32f4xx_hal_can_legacy.h"}\par
304 {\cf21 #endif }{\cf20 /* HAL_CAN_LEGACY_MODULE_ENABLED */}{\cf21 }\par
305 \par
306 {\cf21 #ifdef HAL_CRC_MODULE_ENABLED}\par
307 {\cf21   #include "stm32f4xx_hal_crc.h"}\par
308 {\cf21 #endif }{\cf20 /* HAL_CRC_MODULE_ENABLED */}{\cf21 }\par
309 \par
310 {\cf21 #ifdef HAL_CRYP_MODULE_ENABLED}\par
311 {\cf21   #include "stm32f4xx_hal_cryp.h"}\par
312 {\cf21 #endif }{\cf20 /* HAL_CRYP_MODULE_ENABLED */}{\cf21 }\par
313 \par
314 {\cf21 #ifdef HAL_DMA2D_MODULE_ENABLED}\par
315 {\cf21   #include "stm32f4xx_hal_dma2d.h"}\par
316 {\cf21 #endif }{\cf20 /* HAL_DMA2D_MODULE_ENABLED */}{\cf21 }\par
317 \par
318 {\cf21 #ifdef HAL_DAC_MODULE_ENABLED}\par
319 {\cf21   #include "stm32f4xx_hal_dac.h"}\par
320 {\cf21 #endif }{\cf20 /* HAL_DAC_MODULE_ENABLED */}{\cf21 }\par
321 \par
322 {\cf21 #ifdef HAL_DCMI_MODULE_ENABLED}\par
323 {\cf21   #include "stm32f4xx_hal_dcmi.h"}\par
324 {\cf21 #endif }{\cf20 /* HAL_DCMI_MODULE_ENABLED */}{\cf21 }\par
325 \par
326 {\cf21 #ifdef HAL_ETH_MODULE_ENABLED}\par
327 {\cf21   #include "stm32f4xx_hal_eth.h"}\par
328 {\cf21 #endif }{\cf20 /* HAL_ETH_MODULE_ENABLED */}{\cf21 }\par
329 \par
330 {\cf21 #ifdef HAL_ETH_LEGACY_MODULE_ENABLED}\par
331 {\cf21   #include "stm32f4xx_hal_eth_legacy.h"}\par
332 {\cf21 #endif }{\cf20 /* HAL_ETH_LEGACY_MODULE_ENABLED */}{\cf21 }\par
333 \par
334 {\cf21 #ifdef HAL_FLASH_MODULE_ENABLED}\par
335 {\cf21   #include "stm32f4xx_hal_flash.h"}\par
336 {\cf21 #endif }{\cf20 /* HAL_FLASH_MODULE_ENABLED */}{\cf21 }\par
337 \par
338 {\cf21 #ifdef HAL_SRAM_MODULE_ENABLED}\par
339 {\cf21   #include "stm32f4xx_hal_sram.h"}\par
340 {\cf21 #endif }{\cf20 /* HAL_SRAM_MODULE_ENABLED */}{\cf21 }\par
341 \par
342 {\cf21 #ifdef HAL_NOR_MODULE_ENABLED}\par
343 {\cf21   #include "stm32f4xx_hal_nor.h"}\par
344 {\cf21 #endif }{\cf20 /* HAL_NOR_MODULE_ENABLED */}{\cf21 }\par
345 \par
346 {\cf21 #ifdef HAL_NAND_MODULE_ENABLED}\par
347 {\cf21   #include "stm32f4xx_hal_nand.h"}\par
348 {\cf21 #endif }{\cf20 /* HAL_NAND_MODULE_ENABLED */}{\cf21 }\par
349 \par
350 {\cf21 #ifdef HAL_PCCARD_MODULE_ENABLED}\par
351 {\cf21   #include "stm32f4xx_hal_pccard.h"}\par
352 {\cf21 #endif }{\cf20 /* HAL_PCCARD_MODULE_ENABLED */}{\cf21 }\par
353 \par
354 {\cf21 #ifdef HAL_SDRAM_MODULE_ENABLED}\par
355 {\cf21   #include "stm32f4xx_hal_sdram.h"}\par
356 {\cf21 #endif }{\cf20 /* HAL_SDRAM_MODULE_ENABLED */}{\cf21 }\par
357 \par
358 {\cf21 #ifdef HAL_HASH_MODULE_ENABLED}\par
359 {\cf21  #include "stm32f4xx_hal_hash.h"}\par
360 {\cf21 #endif }{\cf20 /* HAL_HASH_MODULE_ENABLED */}{\cf21 }\par
361 \par
362 {\cf21 #ifdef HAL_I2C_MODULE_ENABLED}\par
363 {\cf21  #include "stm32f4xx_hal_i2c.h"}\par
364 {\cf21 #endif }{\cf20 /* HAL_I2C_MODULE_ENABLED */}{\cf21 }\par
365 \par
366 {\cf21 #ifdef HAL_SMBUS_MODULE_ENABLED}\par
367 {\cf21  #include "stm32f4xx_hal_smbus.h"}\par
368 {\cf21 #endif }{\cf20 /* HAL_SMBUS_MODULE_ENABLED */}{\cf21 }\par
369 \par
370 {\cf21 #ifdef HAL_I2S_MODULE_ENABLED}\par
371 {\cf21  #include "stm32f4xx_hal_i2s.h"}\par
372 {\cf21 #endif }{\cf20 /* HAL_I2S_MODULE_ENABLED */}{\cf21 }\par
373 \par
374 {\cf21 #ifdef HAL_IWDG_MODULE_ENABLED}\par
375 {\cf21  #include "stm32f4xx_hal_iwdg.h"}\par
376 {\cf21 #endif }{\cf20 /* HAL_IWDG_MODULE_ENABLED */}{\cf21 }\par
377 \par
378 {\cf21 #ifdef HAL_LTDC_MODULE_ENABLED}\par
379 {\cf21  #include "stm32f4xx_hal_ltdc.h"}\par
380 {\cf21 #endif }{\cf20 /* HAL_LTDC_MODULE_ENABLED */}{\cf21 }\par
381 \par
382 {\cf21 #ifdef HAL_PWR_MODULE_ENABLED}\par
383 {\cf21  #include "stm32f4xx_hal_pwr.h"}\par
384 {\cf21 #endif }{\cf20 /* HAL_PWR_MODULE_ENABLED */}{\cf21 }\par
385 \par
386 {\cf21 #ifdef HAL_RNG_MODULE_ENABLED}\par
387 {\cf21  #include "stm32f4xx_hal_rng.h"}\par
388 {\cf21 #endif }{\cf20 /* HAL_RNG_MODULE_ENABLED */}{\cf21 }\par
389 \par
390 {\cf21 #ifdef HAL_RTC_MODULE_ENABLED}\par
391 {\cf21  #include "stm32f4xx_hal_rtc.h"}\par
392 {\cf21 #endif }{\cf20 /* HAL_RTC_MODULE_ENABLED */}{\cf21 }\par
393 \par
394 {\cf21 #ifdef HAL_SAI_MODULE_ENABLED}\par
395 {\cf21  #include "stm32f4xx_hal_sai.h"}\par
396 {\cf21 #endif }{\cf20 /* HAL_SAI_MODULE_ENABLED */}{\cf21 }\par
397 \par
398 {\cf21 #ifdef HAL_SD_MODULE_ENABLED}\par
399 {\cf21  #include "stm32f4xx_hal_sd.h"}\par
400 {\cf21 #endif }{\cf20 /* HAL_SD_MODULE_ENABLED */}{\cf21 }\par
401 \par
402 {\cf21 #ifdef HAL_SPI_MODULE_ENABLED}\par
403 {\cf21  #include "stm32f4xx_hal_spi.h"}\par
404 {\cf21 #endif }{\cf20 /* HAL_SPI_MODULE_ENABLED */}{\cf21 }\par
405 \par
406 {\cf21 #ifdef HAL_TIM_MODULE_ENABLED}\par
407 {\cf21  #include "stm32f4xx_hal_tim.h"}\par
408 {\cf21 #endif }{\cf20 /* HAL_TIM_MODULE_ENABLED */}{\cf21 }\par
409 \par
410 {\cf21 #ifdef HAL_UART_MODULE_ENABLED}\par
411 {\cf21  #include "stm32f4xx_hal_uart.h"}\par
412 {\cf21 #endif }{\cf20 /* HAL_UART_MODULE_ENABLED */}{\cf21 }\par
413 \par
414 {\cf21 #ifdef HAL_USART_MODULE_ENABLED}\par
415 {\cf21  #include "stm32f4xx_hal_usart.h"}\par
416 {\cf21 #endif }{\cf20 /* HAL_USART_MODULE_ENABLED */}{\cf21 }\par
417 \par
418 {\cf21 #ifdef HAL_IRDA_MODULE_ENABLED}\par
419 {\cf21  #include "stm32f4xx_hal_irda.h"}\par
420 {\cf21 #endif }{\cf20 /* HAL_IRDA_MODULE_ENABLED */}{\cf21 }\par
421 \par
422 {\cf21 #ifdef HAL_SMARTCARD_MODULE_ENABLED}\par
423 {\cf21  #include "stm32f4xx_hal_smartcard.h"}\par
424 {\cf21 #endif }{\cf20 /* HAL_SMARTCARD_MODULE_ENABLED */}{\cf21 }\par
425 \par
426 {\cf21 #ifdef HAL_WWDG_MODULE_ENABLED}\par
427 {\cf21  #include "stm32f4xx_hal_wwdg.h"}\par
428 {\cf21 #endif }{\cf20 /* HAL_WWDG_MODULE_ENABLED */}{\cf21 }\par
429 \par
430 {\cf21 #ifdef HAL_PCD_MODULE_ENABLED}\par
431 {\cf21  #include "stm32f4xx_hal_pcd.h"}\par
432 {\cf21 #endif }{\cf20 /* HAL_PCD_MODULE_ENABLED */}{\cf21 }\par
433 \par
434 {\cf21 #ifdef HAL_HCD_MODULE_ENABLED}\par
435 {\cf21  #include "stm32f4xx_hal_hcd.h"}\par
436 {\cf21 #endif }{\cf20 /* HAL_HCD_MODULE_ENABLED */}{\cf21 }\par
437 \par
438 {\cf21 #ifdef HAL_DSI_MODULE_ENABLED}\par
439 {\cf21  #include "stm32f4xx_hal_dsi.h"}\par
440 {\cf21 #endif }{\cf20 /* HAL_DSI_MODULE_ENABLED */}{\cf21 }\par
441 \par
442 {\cf21 #ifdef HAL_QSPI_MODULE_ENABLED}\par
443 {\cf21  #include "stm32f4xx_hal_qspi.h"}\par
444 {\cf21 #endif }{\cf20 /* HAL_QSPI_MODULE_ENABLED */}{\cf21 }\par
445 \par
446 {\cf21 #ifdef HAL_CEC_MODULE_ENABLED}\par
447 {\cf21  #include "stm32f4xx_hal_cec.h"}\par
448 {\cf21 #endif }{\cf20 /* HAL_CEC_MODULE_ENABLED */}{\cf21 }\par
449 \par
450 {\cf21 #ifdef HAL_FMPI2C_MODULE_ENABLED}\par
451 {\cf21  #include "stm32f4xx_hal_fmpi2c.h"}\par
452 {\cf21 #endif }{\cf20 /* HAL_FMPI2C_MODULE_ENABLED */}{\cf21 }\par
453 \par
454 {\cf21 #ifdef HAL_FMPSMBUS_MODULE_ENABLED}\par
455 {\cf21  #include "stm32f4xx_hal_fmpsmbus.h"}\par
456 {\cf21 #endif }{\cf20 /* HAL_FMPSMBUS_MODULE_ENABLED */}{\cf21 }\par
457 \par
458 {\cf21 #ifdef HAL_SPDIFRX_MODULE_ENABLED}\par
459 {\cf21  #include "stm32f4xx_hal_spdifrx.h"}\par
460 {\cf21 #endif }{\cf20 /* HAL_SPDIFRX_MODULE_ENABLED */}{\cf21 }\par
461 \par
462 {\cf21 #ifdef HAL_DFSDM_MODULE_ENABLED}\par
463 {\cf21  #include "stm32f4xx_hal_dfsdm.h"}\par
464 {\cf21 #endif }{\cf20 /* HAL_DFSDM_MODULE_ENABLED */}{\cf21 }\par
465 \par
466 {\cf21 #ifdef HAL_LPTIM_MODULE_ENABLED}\par
467 {\cf21  #include "stm32f4xx_hal_lptim.h"}\par
468 {\cf21 #endif }{\cf20 /* HAL_LPTIM_MODULE_ENABLED */}{\cf21 }\par
469 \par
470 {\cf21 #ifdef HAL_MMC_MODULE_ENABLED}\par
471 {\cf21  #include "stm32f4xx_hal_mmc.h"}\par
472 {\cf21 #endif }{\cf20 /* HAL_MMC_MODULE_ENABLED */}{\cf21 }\par
473 \par
474 {\cf20 /* Exported macro ------------------------------------------------------------*/}\par
475 {\cf21 #ifdef  USE_FULL_ASSERT}{\cf21 }\par
484 {\cf21   #define assert_param(expr) ((expr) ? (void)0U : assert_failed((uint8_t *)__FILE__, __LINE__))}\par
485 {\cf20 /* Exported functions ------------------------------------------------------- */}\par
486   {\cf18 void} assert_failed(uint8_t* file, uint32_t line);\par
487 {\cf21 #else}\par
488 {\cf21   #define assert_param(expr) ((void)0U)}\par
489 {\cf21 #endif }{\cf20 /* USE_FULL_ASSERT */}{\cf21 }\par
490 \par
491 {\cf21 #ifdef __cplusplus}\par
492 \}\par
493 {\cf21 #endif}\par
494 \par
495 {\cf21 #endif }{\cf20 /* __STM32F4xx_HAL_CONF_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_it.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_it.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_it.h}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the headers of the interrupt handlers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b NMI_Handler} (void){\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Non maskable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b HardFault_Handler} (void){\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Hard fault interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b MemManage_Handler} (void){\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Memory management fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BusFault_Handler} (void){\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Pre-fetch fault, memory access fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UsageFault_Handler} (void){\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Undefined instruction or illegal state. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DebugMon_Handler} (void){\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Debug monitor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TIM7_IRQHandler} (void){\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles TIM7 global interrupt. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the headers of the interrupt handlers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f4xx_it.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_it.h}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/inc/stm32f4xx_it.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Ir a la documentaci\'F3n de este archivo.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /* USER CODE BEGIN Header */}\par
18 {\cf20 /* USER CODE END Header */}\par
19 \par
20 {\cf20 /* Define to prevent recursive inclusion -------------------------------------*/}\par
21 {\cf21 #ifndef __STM32F4xx_IT_H}\par
22 {\cf21 #define __STM32F4xx_IT_H}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25 {\cf17 extern} {\cf22 "C"} \{\par
26 {\cf21 #endif}\par
27 \par
28 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
29 {\cf20 /* USER CODE BEGIN Includes */}\par
30 \par
31 {\cf20 /* USER CODE END Includes */}\par
32 \par
33 {\cf20 /* Exported types ------------------------------------------------------------*/}\par
34 {\cf20 /* USER CODE BEGIN ET */}\par
35 \par
36 {\cf20 /* USER CODE END ET */}\par
37 \par
38 {\cf20 /* Exported constants --------------------------------------------------------*/}\par
39 {\cf20 /* USER CODE BEGIN EC */}\par
40 \par
41 {\cf20 /* USER CODE END EC */}\par
42 \par
43 {\cf20 /* Exported macro ------------------------------------------------------------*/}\par
44 {\cf20 /* USER CODE BEGIN EM */}\par
45 \par
46 {\cf20 /* USER CODE END EM */}\par
47 \par
48 {\cf20 /* Exported functions prototypes ---------------------------------------------*/}\par
49 {\cf18 void} NMI_Handler({\cf18 void});\par
50 {\cf18 void} HardFault_Handler({\cf18 void});\par
51 {\cf18 void} MemManage_Handler({\cf18 void});\par
52 {\cf18 void} BusFault_Handler({\cf18 void});\par
53 {\cf18 void} UsageFault_Handler({\cf18 void});\par
54 {\cf18 void} DebugMon_Handler({\cf18 void});\par
55 {\cf18 void} TIM7_IRQHandler({\cf18 void});\par
56 {\cf20 /* USER CODE BEGIN EFP */}\par
57 \par
58 {\cf20 /* USER CODE END EFP */}\par
59 \par
60 {\cf21 #ifdef __cplusplus}\par
61 \}\par
62 {\cf21 #endif}\par
63 \par
64 {\cf21 #endif }{\cf20 /* __STM32F4xx_IT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_i2cm.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_i2cm.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_i2cm.c}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the I2C master. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dev_i2cm_api.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_InitStart} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa I2C1 a 400 kHz, 7-bit, sin dual address. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_DeInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa I2C1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Write} (uint8_t address, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escribe un buffer en un esclavo I\'B2C. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Read} (uint8_t address, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee un buffer crudo desde un esclavo I\'B2C (no lee direcci\'F3n interna). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_Read_Sr} (uint8_t address, uint8_t reg, uint8_t *data, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lee bytes desde un registro interno. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CM_IsDeviceReady} (uint8_t address, uint32_t trials)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica si un esclavo responde (ACK) en la direcci\'F3n dada. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the I2C master. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_i2cs.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_i2cs.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_i2cs.c}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the I2C instances. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "api.h"}\par
{\f2 #include "dev_i2cs_api.h"}\par
{\f2 #include "stm32f4xx_ll_i2c.h"}\par
{\f2 #include "stm32f4xx.h"}\par
{\f2 #include "sys_dbg_api.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2C2_EnableAcknowledge} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2C2_DisableAcknowledge} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CS_InitStart} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b I2CS_DeInit} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b I2C2_EV_IRQHandler} (void){\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b I2C2_ER_IRQHandler} (void){\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

volatile uint8_t {\b state} = I2CS_STATE_READY{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the I2C instances. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v I2C2_DisableAcknowledge\:dev_i2cs.c}
{\xe \v dev_i2cs.c\:I2C2_DisableAcknowledge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2C2_DisableAcknowledge (void )}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disables the I2C slave module.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef\par
}}RTOS Info: Any \par
}}
{\xe \v I2C2_EnableAcknowledge\:dev_i2cs.c}
{\xe \v dev_i2cs.c\:I2C2_EnableAcknowledge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2C2_EnableAcknowledge (void )}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the I2C slave module.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef\par
}}RTOS Info: Any \par
}}
{\xe \v I2CS_DeInit\:dev_i2cs.c}
{\xe \v dev_i2cs.c\:I2CS_DeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CS_DeInit (void )}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deinitializes the I2C slave module.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef\par
}}RTOS Info: Any \par
}}
{\xe \v I2CS_InitStart\:dev_i2cs.c}
{\xe \v dev_i2cs.c\:I2CS_InitStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef I2CS_InitStart (void )}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the I2C slave module.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
HAL_StatusTypeDef\par
}}RTOS Info: Any \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_uart.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_uart.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/dev/dev_uart.c}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the UART. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dev_uart.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b uartInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa la UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b uartDeInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa la UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uartSendString} (uint8_t *pstring)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cadena de bytes por UART finalizada en '\\0'. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uartSendStringSize} (uint8_t *pstring, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cantidad espec\'EDfica de bytes por UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uartReceiveStringSize} (uint8_t *pstring, uint16_t size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recibe una cantidad de bytes por UART. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of the UART. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v uartDeInit\:dev_uart.c}
{\xe \v dev_uart.c\:uartDeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool uartDeInit ()}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desinicializa la UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si se finalizo correctamente, false si hubo alg\'FAn problema. \par
}}}}
{\xe \v uartInit\:dev_uart.c}
{\xe \v dev_uart.c\:uartInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool uartInit ()}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializa la UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si se inicializ\'F3 bien, false si hubo alg\'FAn problema en la configuracion. \par
}}}}
{\xe \v uartReceiveStringSize\:dev_uart.c}
{\xe \v dev_uart.c\:uartReceiveStringSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uartReceiveStringSize (uint8_t * pstring, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recibe una cantidad de bytes por UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pstring} \cell }{Puntero al buffer donde se guardar\'E1n los datos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Cantidad de bytes a recibir. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}
{\xe \v uartSendString\:dev_uart.c}
{\xe \v dev_uart.c\:uartSendString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uartSendString (uint8_t * pstring)}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cadena de bytes por UART finalizada en '\\0'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pstring} \cell }{Puntero a la cadena a enviar. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}
{\xe \v uartSendStringSize\:dev_uart.c}
{\xe \v dev_uart.c\:uartSendStringSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uartSendStringSize (uint8_t * pstring, uint16_t size)}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Env\'EDa una cantidad espec\'EDfica de bytes por UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pstring} \cell }{Puntero al buffer de datos. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Cantidad de bytes a enviar. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/main.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/main.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/main.c}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Main program body }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemClock_Config} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Clock Configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The application entry point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Error_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
: Main program body \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v Error_Handler\:main.c}
{\xe \v main.c\:Error_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Error_Handler (void )}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}}
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (void )}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The application entry point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i int} \cell }{\cell }
{\row }
}
}}
{\xe \v SystemClock_Config\:main.c}
{\xe \v main.c\:SystemClock_Config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemClock_Config (void )}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Clock Configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure the main internal regulator output voltage\par
Initializes the RCC Oscillators according to the specified parameters in the RCC_OscInitTypeDef structure.\par
Initializes the CPU, AHB and APB buses clocks\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_hal_msp.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_hal_msp.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_hal_msp.c}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_hal_timebase_tim.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_hal_timebase_tim.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_hal_timebase_tim.c}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx_hal.h"}\par
{\f2 #include "stm32f4xx_hal_tim.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TIM_HandleTypeDef {\b htim7}{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_it.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_it.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/stm32f4xx_it.c}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Service Routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
{\f2 #include "stm32f4xx_it.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b NMI_Handler} (void){\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Non maskable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b HardFault_Handler} (void){\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Hard fault interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b MemManage_Handler} (void){\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Memory management fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BusFault_Handler} (void){\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Pre-fetch fault, memory access fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UsageFault_Handler} (void){\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Undefined instruction or illegal state. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DebugMon_Handler} (void){\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Debug monitor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TIM7_IRQHandler} (void){\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles TIM7 global interrupt. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TIM_HandleTypeDef {\b htim7}{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Service Routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/sys_sm.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/sys_sm.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/sys_sm.c}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E1quina de estados principal del sistema. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "sys_sm.h"}\par
{\f2 #include "FreeRTOS.h"}\par
{\f2 #include "cmsis_os.h"}\par
{\f2 #include "dev_LCD.h"}\par
{\f2 #include "mpu6050.h"}\par
{\f2 #include "ds3231.h"}\par
{\f2 #include "mpu_math.h"}\par
{\f2 #include "dev_gpio_cfg.h"}\par
{\f2 #include "dev_uart.h"}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estructuras de datos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SM_Handler}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura de control que contiene todas las variables de la SM principal. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Boot_Status}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura utilizada en el proceso de inicializaci\'F3n de dispositivos. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SAMPLE_PERIOD_MS}\~ 100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuraci\'F3n del ciclo de muestreo y actualizaci\'F3n del sistema. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PERIOD_100MS}\~ pdMS_TO_TICKS(100){\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PERIOD_1S}\~ pdMS_TO_TICKS(1000){\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_REFRESH_DIV}\~ 5{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b ALPHA}\~ 0.2f                /* Filtro utilizado para el calculo del angulo*/{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b STR_LENGTH}\~ {\b DEV_LCD_COLS} + 1    /* 16 Caracteres del LCD + \\0 */{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b BOOT_MAX_TRIES}\~ 3                            /* Numero de intentos de inicializaci\'F3n por perif\'E9rico */{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Device_Init_Stage} \{ {\b DEV_INIT_LCD} = 0
, {\b DEV_INIT_RTC}
, {\b DEV_INIT_MPU}
, {\b DEV_INIT_COMPLETE}
, {\b DEV_INIT_ERROR}
 \}{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estado de inicializaci\'F3n de perif\'E9ricos durante el arranque del sistema. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b SM_InitOS} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crea e inicializa la tarea principal de la m\'E1quina de estados, utilizando el FreeRTOS proporcionado por el CubeMX. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SM_Iter} (void *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E1quina de estados principal del sistema. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E1quina de estados principal del sistema. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta SM se encarga de coordinar todo el flujo del dispositivo: arranca los perif\'E9ricos (LCD, RTC, MPU6050), realiza las lecturas peri\'F3dicas y muestra la informaci\'F3n tanto en pantalla como por UART. Adem\'E1s, controla el parpadeo del LED seg\'FAn el \'E1ngulo de inclinaci\'F3n detectado.\par
Ciclo principal (\'E2\'89\'88100 ms):{
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Lee los sensores.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Calcula el \'E1ngulo de inclinaci\'F3n.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Ajusta la frecuencia del LED seg\'FAn el \'E1ngulo.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Actualiza la hora y el \'E1ngulo en LCD y UART.\par}
\par
Flujo de estados: ST_INIT \'E2\'86\'93 ST_READ_SENSORS \'E2\'86\'92 ST_UPDATE_LED \'E2\'86\'92 ST_UPDATE_UART \'E2\'86\'92 (vuelve a leer)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Mat\'EDas Durante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Versi\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.0 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Fecha\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2025 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v SAMPLE_PERIOD_MS\:sys_sm.c}
{\xe \v sys_sm.c\:SAMPLE_PERIOD_MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SAMPLE_PERIOD_MS\~ 100}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuraci\'F3n del ciclo de muestreo y actualizaci\'F3n del sistema. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
El loop principal corre cada 100 ms (PERIOD_100MS).\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Se lee la informaci\'F3n del RTC y se actualizan los valores del LCD cada 1 segundo. \par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v SM_InitOS\:sys_sm.c}
{\xe \v sys_sm.c\:SM_InitOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef SM_InitOS (void )}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crea e inicializa la tarea principal de la m\'E1quina de estados, utilizando el FreeRTOS proporcionado por el CubeMX. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Valores devueltos\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL_OK} \cell }{si la tarea fue creada correctamente. \cell }
{\row }
}
}}
{\xe \v SM_Iter\:sys_sm.c}
{\xe \v sys_sm.c\:SM_Iter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SM_Iter (void * argument)}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E1quina de estados principal del sistema. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tarea que ejecuta la m\'E1quina de estados.\par
Estados:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
ST_INIT: Inicializa perif\'E9ricos. Si inicializan correctamente, se pasa al estado ST_READ_SENSORS; En caso de falla luego de los reintentos, se pasa al estado ST_ERROR.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
ST_READ_SENSORS: Lee la informaci\'F3n del MPU6050, filtra el \'E1ngulo y pasa a ST_UPDATE_LED.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
ST_UPDATE_LED: Ajusta el periodo de parpadeo seg\'FAn el \'E1ngulo; pasa a ST_UPDATE_UART.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
ST_UPDATE_UART: Env\'EDa hora y \'E1ngulo por UART; vuelve a ST_READ_SENSORS.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
ST_ERROR: Muestra un mensaje de error en el LCD y reinicia el MCU.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
RTC: Actualiza el LCD cada 1 s con hora y \'E1ngulo.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
LED: Parpadea seg\'FAn la inclinaci\'F3n calculada. \par}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/syscalls.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/syscalls.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/syscalls.c}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE Minimal System calls file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sys/stat.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <signal.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include <sys/time.h>}\par
{\f2 #include <sys/times.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b __io_putchar} (int ch) __attribute__((weak)){\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b __io_getchar} (void){\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialise_monitor_handles} (){\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _getpid} (void){\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _kill} (int pid, int sig){\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b _exit} (int status){\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __attribute__} ((weak)){\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _close} (int file){\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _fstat} (int file, struct stat *st){\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _isatty} (int file){\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _lseek} (int file, int ptr, int dir){\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _open} (char *path, int flags,...){\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _wait} (int *status){\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _unlink} (char *name){\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _times} (struct tms *buf){\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _stat} (char *file, struct stat *st){\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _link} (char *old, char *new){\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _fork} (void){\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b _execve} (char *name, char **argv, char **env){\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char ** {\b environ} = __env{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE Minimal System calls file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Auto-generated by STM32CubeIDE {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid        For more information about which c-functions\par
       need which of these lowlevel functions\par
       please consult the Newlib libc-manual\par
}
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2020-2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/sysmem.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/sysmem.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/sysmem.c}
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE System Memory calls file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <errno.h>}\par
{\f2 #include <stdint.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b _sbrk} (ptrdiff_t incr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b _sbrk()} allocates memory to the newlib heap and is used by malloc and others from the C library }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STM32CubeIDE System Memory calls file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Generated by STM32CubeIDE {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid        For more information about which C functions\par
       need which of these lowlevel functions\par
       please consult the newlib libc manual\par
}
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2025 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v _sbrk\:sysmem.c}
{\xe \v sysmem.c\:_sbrk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * _sbrk (ptrdiff_t incr)}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b _sbrk()} allocates memory to the newlib heap and is used by malloc and others from the C library }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid * ############################################################################\par
* #  .data  #  .bss  #       newlib heap       #          MSP stack          #\par
* #         #        #                         # Reserved by _Min_Stack_Size #\par
* ############################################################################\par
* ^-- RAM start      ^-- _end                             _estack, RAM end --^\par
* }
\par
This implementation starts allocating at the '_end' linker symbol The '_Min_Stack_Size' linker symbol reserves a memory for the MSP stack The implementation considers '_estack' linker symbol to be RAM end NOTE: If the MSP stack, at any point during execution, grows larger than the reserved size, please increase the '_Min_Stack_Size'.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i incr} \cell }{Memory size \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pointer to allocated memory \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/system_stm32f4xx.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/system_stm32f4xx.c}
{\xe \v C:/Users/Matias D/Documents/Proyecto_Final/fw/app/mcu/src/sys/system_stm32f4xx.c}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M4 Device Peripheral Access Layer System Source File. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f4xx.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSE_VALUE}\~ ((uint32_t)25000000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSI_VALUE}\~ ((uint32_t)16000000)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the FPU setting, vector table location and External memory configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemCoreClockUpdate} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b SystemCoreClock} = 16000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b AHBPrescTable} [16] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t {\b APBPrescTable} [8] = \{0, 0, 0, 0, 1, 2, 3, 4\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M4 Device Peripheral Access Layer System Source File. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
MCD Application Team \par
}}This file provides two functions and one global variable to be called from user application:{
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b SystemInit()}: This function is called at startup just after reset and before branch to main program. This call is made inside the "startup_stm32f4xx.s" file.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
SystemCoreClock variable: Contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b SystemCoreClockUpdate()}: Updates the variable SystemCoreClock and must be called whenever the core clock is changed during program execution.\par}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Atenci\'F3n\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2017 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Ejemplos{\tc \v Ejemplos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/Matias D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf19 if} (DS3231_Init() == DS3231_OK) \{\par
    (void)DS3231_SetTime(25, 9, 24, 3, 16, 20, 30); {\cf20 // 2025-09-24 16:20:30}\par
    DS3231_Time now;\par
    {\cf19 if} (DS3231_ReadTime(&now) == DS3231_OK) \{\par
        uint8_t hh = now.hours;\par
        uint8_t mi = now.minutes;\par
        uint8_t ss = now.seconds;\par
    \}\par
\}\par
}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \par}
 {\b D/Documents/Proyecto_Final/Devices/DS3231/Inc/ds3231.h} \par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
